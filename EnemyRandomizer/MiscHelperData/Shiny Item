START =====================================================
Printing scene hierarchy for game object: Shiny Item
Cloak Corpse\Shiny Item
              \--Component: Transform
              \--GameObject activeSelf: False
              \--GameObject layer: 18
              \--GameObject tag: Untagged
              \--Transform Position: (23.2, 27.2, 0.1)
              \--Transform Rotation: (0.0, 0.0, 0.0)
              \--Transform LocalScale: (1.5, 1.5, 1.5)
              \--Component: SpriteRenderer
              \--Component: Animator
              \--Component: PlayMakerFSM
              \--PFSM Name: Shiny Control
              \--PFSM FsmDescription: 
              \--PFSM StateNames
              \----PFSM StateName: Pause
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Init
              \----PFSM ---- Actions for state: Actions on Pause ::: NextFrameEvent
              \----PFSM ---- NextFrameEvent(String, sendEvent) = FINISHED
              \----PFSM StateName: Init
              \----PFSM ---- Transitions for state: Transition on FINISHED to state PD Bool?
              \----PFSM ---- Transitions for state: Transition on ACTIVATE to state Destroy
              \----PFSM ---- Actions for state: Actions on Init ::: SetRotation
              \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
              \----PFSM ---- Actions for state: Actions on Init ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Init ::: FindChild
              \----PFSM ---- Actions for state: Actions on Init ::: FindChild
              \----PFSM ---- SetRotation (Name) = 
              \----PFSM ---- SetRotation (GameObject) = None
              \----PFSM ---- SetRotation (GameObject Name) = 
              \----PFSM ---- SetRotation (OwnerOption) = UseOwner
              \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
              \----PFSM ---- SetRotation (vector name) = 
              \----PFSM ---- SetRotation (everyFrame) = False
              \----PFSM ---- SetRotation (lateUpdate) = False
              \----PFSM ---- SetRotation (space) = World
              \----PFSM ---- SetRotation (xAngle) = 0
              \----PFSM ---- SetRotation (yAngle) = 0
              \----PFSM ---- SetRotation (zAngle) = 0
              \----PFSM ---- SetRotation (xAngle name) = 
              \----PFSM ---- SetRotation (yAngle name) = 
              \----PFSM ---- SetRotation (zAngle name) = 
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Activated
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = ACTIVATE
              \----PFSM StateName: PD Bool?
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Fling?
              \----PFSM ---- Transitions for state: Transition on COLLECTED to state Destroy
              \----PFSM ---- Actions for state: Actions on PD Bool? ::: StringCompare
              \----PFSM ---- Actions for state: Actions on PD Bool? ::: PlayerDataBoolTest
              \----PFSM ---- PlayerDataBoolTest (boolName) = hasDash
              \----PFSM ---- PlayerDataBoolTest (bool.Value) = False
              \----PFSM StateName: Idle
              \----PFSM ---- Transitions for state: Transition on START INSPECT to state Hero Down
              \----PFSM ---- Actions for state: Actions on Idle ::: SendMessage
              \----PFSM ---- Actions for state: Actions on Idle ::: SetFsmBool
              \----PFSM ---- SetFsmBool (Name) = 
              \----PFSM ---- SetFsmBool (GameObject) = None
              \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
              \----PFSM ---- SetFsmBool (fsmName) = inspect
              \----PFSM ---- SetFsmBool (variableName) = Inspectable
              \----PFSM ---- SetFsmBool (setValue) = True
              \----PFSM StateName: Destroy
              \----PFSM ---- Actions for state: Actions on Destroy ::: DestroySelf
              \----PFSM StateName: Charm?
              \----PFSM ---- Transitions for state: Transition on CHARM to state Get Charm
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Big Item?
              \----PFSM ---- Actions for state: Actions on Charm? ::: BoolTest
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Charm
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = CHARM
              \----PFSM StateName: Hero Down
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Charm?
              \----PFSM ---- Transitions for state: Transition on HERO DAMAGED to state Idle
              \----PFSM ---- Actions for state: Actions on Hero Down ::: SendEventByName
              \----PFSM ---- Actions for state: Actions on Hero Down ::: Tk2dPlayAnimation
              \----PFSM ---- Actions for state: Actions on Hero Down ::: Wait
              \----PFSM ---- SendEventByName (Name) = 
              \----PFSM ---- SendEventByName (delay) = 0
              \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
              \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
              \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
              \----PFSM ---- SendEventByName (sendEvent) = STOP
              \----PFSM ---- Tk2dPlayAnimation (Name) = 
              \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
              \----PFSM ---- Tk2dPlayAnimation (clipName) = Collect Normal 1
              \----PFSM ---- Wait(String, finishEvent) = FINISHED
              \----PFSM ---- Wait(Boolean, realTime) = False
              \----PFSM ---- Wait(FsmFloat, ) = 0.75      :: IsNone? = False
              \----PFSM StateName: Flash
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Hero Up
              \----PFSM ---- Transitions for state: Transition on HERO DAMAGED to state Finish
              \----PFSM ---- Actions for state: Actions on Flash ::: SpawnObjectFromGlobalPool
              \----PFSM ---- Actions for state: Actions on Flash ::: AudioStop
              \----PFSM ---- Actions for state: Actions on Flash ::: AudioPlaySimple
              \----PFSM ---- Actions for state: Actions on Flash ::: SetSpriteRenderer
              \----PFSM ---- Actions for state: Actions on Flash ::: Tk2dPlayAnimation
              \----PFSM ---- Actions for state: Actions on Flash ::: Wait
              \----PFSM ---- SpawnObjectFromGlobalPool (Name) = 
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, ) = Item Get Effect R      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmVector3, ) = (0.0, -0.8, -1.0)      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, Hero) = Knight      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, ) = None      :: IsNone? = True
              \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1      :: IsNone? = False
              \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None      :: IsNone? = False
              \----PFSM ---- AudioPlaySimple(FsmObject, ) = shiny_item_pickup (UnityEngine.AudioClip)      :: IsNone? = False
              \----PFSM ---- Tk2dPlayAnimation (Name) = 
              \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
              \----PFSM ---- Tk2dPlayAnimation (clipName) = Collect Normal 2
              \----PFSM ---- Wait(String, finishEvent) = FINISHED
              \----PFSM ---- Wait(Boolean, realTime) = False
              \----PFSM ---- Wait(FsmFloat, ) = 1      :: IsNone? = False
              \----PFSM StateName: Hero Up
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Finish
              \----PFSM ---- Transitions for state: Transition on HERO DAMAGED to state Finish
              \----PFSM ---- Transitions for state: Transition on DREAM EXIT to state Fade Pause
              \----PFSM ---- Actions for state: Actions on Hero Up ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Hero Up ::: Tk2dPlayAnimationWithEvents
              \----PFSM ---- Actions for state: Actions on Hero Up ::: SendEventByName
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Exit Dream
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = DREAM EXIT
              \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
              \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
              \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Collect Normal 3      :: IsNone? = False
              \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, Hero) = Knight      :: IsNone? = False
              \----PFSM ---- SendEventByName (Name) = 
              \----PFSM ---- SendEventByName (delay) = 0
              \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Tute Msg
              \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = True
              \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
              \----PFSM ---- SendEventByName (sendEvent) = CLOSE
              \----PFSM StateName: Finish
              \----PFSM ---- Actions for state: Actions on Finish ::: CallMethodProper
              \----PFSM ---- Actions for state: Actions on Finish ::: SetBoolValue
              \----PFSM ---- Actions for state: Actions on Finish ::: SetFsmBool
              \----PFSM ---- Actions for state: Actions on Finish ::: SendEventByName
              \----PFSM ---- Actions for state: Actions on Finish ::: SendEventByName
              \----PFSM ---- Actions for state: Actions on Finish ::: SendEventByName
              \----PFSM ---- Actions for state: Actions on Finish ::: FindChild
              \----PFSM ---- Actions for state: Actions on Finish ::: ActivateGameObject
              \----PFSM ---- CallMethodProper(FsmString, ) = GameManager      :: IsNone? = False
              \----PFSM ---- CallMethodProper(FsmGameObject, GameManager) = _GameManager      :: IsNone? = False
              \----PFSM ---- CallMethodProper(FsmString, ) = CheckCharmAchievements      :: IsNone? = False
              \----PFSM ---- CallMethodProper
              \----PFSM ---- CallMethodProper(FsmVar, ) = None      :: IsNone? = True      :: useVariable? = True      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = 
              \----PFSM ---- SetBoolValue (Name) = 
              \----PFSM ---- SetBoolValue (boolValue) = True
              \----PFSM ---- SetBoolValue (boolValue?.Name) = 
              \----PFSM ---- SetBoolValue (boolVariable) = False
              \----PFSM ---- SetBoolValue (boolVariable?.Name) = Activated
              \----PFSM ---- SetFsmBool (Name) = 
              \----PFSM ---- SetFsmBool (GameObject) = None
              \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
              \----PFSM ---- SetFsmBool (fsmName) = inspect
              \----PFSM ---- SetFsmBool (variableName) = Inspectable
              \----PFSM ---- SetFsmBool (setValue) = False
              \----PFSM ---- SendEventByName (Name) = 
              \----PFSM ---- SendEventByName (delay) = 0
              \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Tute Msg
              \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = True
              \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
              \----PFSM ---- SendEventByName (sendEvent) = CLOSE
              \----PFSM ---- SendEventByName (Name) = 
              \----PFSM ---- SendEventByName (delay) = 0
              \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Inspect Region
              \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
              \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
              \----PFSM ---- SendEventByName (sendEvent) = END INSPECT
              \----PFSM ---- SendEventByName (Name) = 
              \----PFSM ---- SendEventByName (delay) = 0
              \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
              \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
              \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
              \----PFSM ---- SendEventByName (sendEvent) = SHINY PICKED UP
              \----PFSM ---- ActivateGameObject (Name) = 
              \----PFSM ---- ActivateGameObject (GameObject) = None
              \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
              \----PFSM ---- ActivateGameObject (activate) = False
              \----PFSM StateName: Get Charm
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Show Tute?
              \----PFSM ---- Actions for state: Actions on Get Charm ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Get Charm ::: SendMessage
              \----PFSM ---- Actions for state: Actions on Get Charm ::: IncrementPlayerDataInt
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasDash
              \----PFSM ---- SetPlayerDataBool (storeValue) = PD Bool Name
              \----PFSM StateName: Show Tute?
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Normal Msg
              \----PFSM ---- Transitions for state: Transition on TUTE to state Tute
              \----PFSM ---- Actions for state: Actions on Show Tute? ::: PlayerDataBoolTest
              \----PFSM ---- Actions for state: Actions on Show Tute? ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Show Tute? ::: BoolTest
              \----PFSM ---- PlayerDataBoolTest (boolName) = hasCharm
              \----PFSM ---- PlayerDataBoolTest (bool.Value) = False
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasCharm
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = True
              \----PFSM ---- BoolTest (boolVariable?.Name) = Show Charm Tute
              \----PFSM ---- BoolTest (isFalse) = FINISHED
              \----PFSM ---- BoolTest (isTrue) = TUTE
              \----PFSM StateName: Normal Msg
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Flash
              \----PFSM ---- Actions for state: Actions on Normal Msg ::: CreateObject
              \----PFSM ---- Actions for state: Actions on Normal Msg ::: SetFsmInt
              \----PFSM ---- CreateObject(FsmGameObject, ) = Charm Get Msg      :: IsNone? = False
              \----PFSM ---- CreateObject(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
              \----PFSM ---- CreateObject(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
              \----PFSM ---- CreateObject(FsmGameObject, ) = None      :: IsNone? = False
              \----PFSM ---- CreateObject(FsmGameObject, Msg) = None      :: IsNone? = False
              \----PFSM ---- CreateObject (networkGroup) = 0
              \----PFSM ---- CreateObject (networkInstantiate) = False
              \----PFSM StateName: Tute
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Wait for Input
              \----PFSM ---- Transitions for state: Transition on HERO DAMAGED to state Finish
              \----PFSM ---- Actions for state: Actions on Tute ::: CreateObject
              \----PFSM ---- Actions for state: Actions on Tute ::: AudioStop
              \----PFSM ---- Actions for state: Actions on Tute ::: AudioPlaySimple
              \----PFSM ---- Actions for state: Actions on Tute ::: SendEventByName
              \----PFSM ---- Actions for state: Actions on Tute ::: FindChild
              \----PFSM ---- Actions for state: Actions on Tute ::: SetFsmInt
              \----PFSM ---- Actions for state: Actions on Tute ::: SpawnObjectFromGlobalPool
              \----PFSM ---- Actions for state: Actions on Tute ::: SetSpriteRenderer
              \----PFSM ---- Actions for state: Actions on Tute ::: Tk2dPlayAnimation
              \----PFSM ---- Actions for state: Actions on Tute ::: Wait
              \----PFSM ---- CreateObject(FsmGameObject, ) = Charm Tutorial Msg      :: IsNone? = False
              \----PFSM ---- CreateObject(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
              \----PFSM ---- CreateObject(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
              \----PFSM ---- CreateObject(FsmGameObject, ) = None      :: IsNone? = False
              \----PFSM ---- CreateObject(FsmGameObject, Tute Msg) = None      :: IsNone? = False
              \----PFSM ---- CreateObject (networkGroup) = 0
              \----PFSM ---- CreateObject (networkInstantiate) = False
              \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1      :: IsNone? = False
              \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None      :: IsNone? = False
              \----PFSM ---- AudioPlaySimple(FsmObject, ) = shiny_item_pickup (UnityEngine.AudioClip)      :: IsNone? = False
              \----PFSM ---- SendEventByName (Name) = 
              \----PFSM ---- SendEventByName (delay) = 0
              \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
              \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
              \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
              \----PFSM ---- SendEventByName (sendEvent) = CHARM TUTE UP
              \----PFSM ---- SpawnObjectFromGlobalPool (Name) = 
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, ) = Item Get Effect R      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmVector3, ) = (0.0, -0.8, -1.0)      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, Hero) = Knight      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, ) = None      :: IsNone? = True
              \----PFSM ---- Tk2dPlayAnimation (Name) = 
              \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
              \----PFSM ---- Tk2dPlayAnimation (clipName) = Collect Normal 2
              \----PFSM ---- Wait(String, finishEvent) = FINISHED
              \----PFSM ---- Wait(Boolean, realTime) = False
              \----PFSM ---- Wait(FsmFloat, ) = 4.5      :: IsNone? = False
              \----PFSM StateName: Wait for Input
              \----PFSM ---- Transitions for state: Transition on HERO DAMAGED to state Finish
              \----PFSM ---- Transitions for state: Transition on BUTTON DOWN to state Hero Up
              \----PFSM ---- Actions for state: Actions on Wait for Input ::: ListenForInventory
              \----PFSM ---- Actions for state: Actions on Wait for Input ::: ListenForCast
              \----PFSM ---- Actions for state: Actions on Wait for Input ::: ListenForAttack
              \----PFSM ---- Actions for state: Actions on Wait for Input ::: ListenForJump
              \----PFSM StateName: Fling?
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Idle
              \----PFSM ---- Transitions for state: Transition on FLING L to state Fling L
              \----PFSM ---- Transitions for state: Transition on FLING R to state Fling R
              \----PFSM ---- Transitions for state: Transition on SLUG to state Slug Fling
              \----PFSM ---- Transitions for state: Transition on GRUB to state Fling Grub
              \----PFSM ---- Transitions for state: Transition on BUBBLE to state Fling Bubble
              \----PFSM ---- Actions for state: Actions on Fling? ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Fling? ::: PlayParticleEmitter
              \----PFSM ---- Actions for state: Actions on Fling? ::: SetFsmBool
              \----PFSM ---- Actions for state: Actions on Fling? ::: SetGravity2dScale
              \----PFSM ---- Actions for state: Actions on Fling? ::: GetTag
              \----PFSM ---- Actions for state: Actions on Fling? ::: StringCompare
              \----PFSM ---- Actions for state: Actions on Fling? ::: StringCompare
              \----PFSM ---- Actions for state: Actions on Fling? ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Fling? ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Fling? ::: SendRandomEvent
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Fling On Start
              \----PFSM ---- BoolTest (isFalse) = FINISHED
              \----PFSM ---- BoolTest (isTrue) = 
              \----PFSM ---- PlayParticleEmitter(FsmGameObject, Trail) = None      :: IsNone? = False
              \----PFSM ---- PlayParticleEmitter(, GameObject value) = 
              \----PFSM ---- PlayParticleEmitter(, GameObject value name) = 
              \----PFSM ---- PlayParticleEmitter(String, GameObject name) = Trail
              \----PFSM ---- PlayParticleEmitter(FsmInt, ) = 0      :: IsNone? = False
              \----PFSM ---- SetFsmBool (Name) = 
              \----PFSM ---- SetFsmBool (GameObject) = None
              \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
              \----PFSM ---- SetFsmBool (fsmName) = inspect
              \----PFSM ---- SetFsmBool (variableName) = Inspectable
              \----PFSM ---- SetFsmBool (setValue) = False
              \----PFSM ---- SetGravity2dScale (Name) = 
              \----PFSM ---- SetGravity2dScale (gameObject?.GameObject?.Name) = 
              \----PFSM ---- SetGravity2dScale (gravityScale?.Value) = 0.85
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Slug Fling
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = SLUG
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Fling L
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = FLING L
              \----PFSM ---- SendRandomEvent(FsmFloat, ) = 0      :: IsNone? = False
              \----PFSM ---- SendRandomEvent(String, Event) = FLING L
              \----PFSM ---- SendRandomEvent(String, Event) = FLING R
              \----PFSM ---- SendRandomEvent(Single, Weight) = 1
              \----PFSM ---- SendRandomEvent(Single, Weight) = 1
              \----PFSM StateName: Fling R
              \----PFSM ---- Transitions for state: Transition on FINISHED to state In Air
              \----PFSM ---- Actions for state: Actions on Fling R ::: FlingObject
              \----PFSM ---- FlingObject (Name) = 
              \----PFSM ---- FlingObject (flungObject?.GameObject?.Name) = 
              \----PFSM StateName: Fling L
              \----PFSM ---- Transitions for state: Transition on FINISHED to state In Air
              \----PFSM ---- Actions for state: Actions on Fling L ::: FlingObject
              \----PFSM ---- FlingObject (Name) = 
              \----PFSM ---- FlingObject (flungObject?.GameObject?.Name) = 
              \----PFSM StateName: In Air
              \----PFSM ---- Transitions for state: Transition on STOPPED to state Land
              \----PFSM ---- Actions for state: Actions on In Air ::: GetSpeed2d
              \----PFSM ---- Actions for state: Actions on In Air ::: FloatCompare
              \----PFSM ---- FloatCompare (Name) = 
              \----PFSM ---- FloatCompare (float1) = 0
              \----PFSM ---- FloatCompare (float2) = 1
              \----PFSM ---- FloatCompare (float1 Name) = Speed
              \----PFSM ---- FloatCompare (float2 Name) = 
              \----PFSM ---- FloatCompare (greaterThan) = 
              \----PFSM ---- FloatCompare (lessThan) = STOPPED
              \----PFSM ---- FloatCompare (equal) = 
              \----PFSM ---- FloatCompare (everyFrame) = True
              \----PFSM StateName: Land
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Idle
              \----PFSM ---- Actions for state: Actions on Land ::: SetGravity2dScale
              \----PFSM ---- Actions for state: Actions on Land ::: SetVelocity2d
              \----PFSM ---- Actions for state: Actions on Land ::: StopParticleEmitter
              \----PFSM ---- SetGravity2dScale (Name) = 
              \----PFSM ---- SetGravity2dScale (gameObject?.GameObject?.Name) = 
              \----PFSM ---- SetGravity2dScale (gravityScale?.Value) = 0
              \----PFSM ---- SetVelocity2d (Name) = 
              \----PFSM ---- SetVelocity2d (gameObject?.GameObject) = None
              \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
              \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
              \----PFSM ---- SetVelocity2d (x) = 0
              \----PFSM ---- SetVelocity2d (y) = 0
              \----PFSM ---- SetVelocity2d (vector?.Value name) = 
              \----PFSM ---- SetVelocity2d (x name) = 
              \----PFSM ---- SetVelocity2d (y name) = 
              \----PFSM ---- SetVelocity2d (everyFrame) = False
              \----PFSM StateName: Big Item?
              \----PFSM ---- Transitions for state: Transition on BIG to state Big Get Flash
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trinket?
              \----PFSM ---- Actions for state: Actions on Big Item? ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Big Item? ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Big Item? ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Big Item? ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Big Item? ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Big Item? ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Big Item? ::: BoolTest
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = True
              \----PFSM ---- BoolTest (boolVariable?.Name) = Dash Cloak
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = BIG
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Mantis Claw
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = BIG
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Journal
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = BIG
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Super Dash
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = BIG
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Quake
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = BIG
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Pure Seed
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = BIG
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = King's Brand
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = BIG
              \----PFSM StateName: Dash
              \----PFSM ---- Transitions for state: Transition on GET ITEM MSG END to state Hero Up
              \----PFSM ---- Actions for state: Actions on Dash ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Dash ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Dash ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Dash ::: CreateUIMsgGetItem
              \----PFSM ---- Actions for state: Actions on Dash ::: SetFsmString
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasDash
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = canDash
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = corn_greenpathLeft
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetFsmString (Name) = 
              \----PFSM ---- SetFsmString (GameObject) = None
              \----PFSM ---- SetFsmString (OwnerOption) = SpecifyGameObject
              \----PFSM ---- SetFsmString (fsmName) = Msg Control
              \----PFSM ---- SetFsmString (variableName) = Item
              \----PFSM ---- SetFsmString (setValue) = Dash
              \----PFSM StateName: Big Get Flash
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Item Choice
              \----PFSM ---- Actions for state: Actions on Big Get Flash ::: SpawnObjectFromGlobalPool
              \----PFSM ---- Actions for state: Actions on Big Get Flash ::: AudioStop
              \----PFSM ---- Actions for state: Actions on Big Get Flash ::: AudioPlaySimple
              \----PFSM ---- Actions for state: Actions on Big Get Flash ::: SetSpriteRenderer
              \----PFSM ---- Actions for state: Actions on Big Get Flash ::: Tk2dPlayAnimation
              \----PFSM ---- Actions for state: Actions on Big Get Flash ::: Wait
              \----PFSM ---- Actions for state: Actions on Big Get Flash ::: SendEventByName
              \----PFSM ---- SpawnObjectFromGlobalPool (Name) = 
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, ) = Item Get Effect R      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmVector3, ) = (0.0, -0.8, -1.0)      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, Hero) = Knight      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, ) = None      :: IsNone? = True
              \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1      :: IsNone? = False
              \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None      :: IsNone? = False
              \----PFSM ---- AudioPlaySimple(FsmObject, ) = shiny_item_pickup (UnityEngine.AudioClip)      :: IsNone? = False
              \----PFSM ---- Tk2dPlayAnimation (Name) = 
              \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
              \----PFSM ---- Tk2dPlayAnimation (clipName) = Collect Normal 2
              \----PFSM ---- Wait(String, finishEvent) = FINISHED
              \----PFSM ---- Wait(Boolean, realTime) = False
              \----PFSM ---- Wait(FsmFloat, ) = 1      :: IsNone? = False
              \----PFSM ---- SendEventByName (Name) = 
              \----PFSM ---- SendEventByName (delay) = 0
              \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
              \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
              \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
              \----PFSM ---- SendEventByName (sendEvent) = KINGS BRAND
              \----PFSM StateName: Item Choice
              \----PFSM ---- Transitions for state: Transition on DASH to state Dash
              \----PFSM ---- Transitions for state: Transition on WALLJUMP to state Walljump
              \----PFSM ---- Transitions for state: Transition on JOURNAL to state Journal
              \----PFSM ---- Transitions for state: Transition on S DASH to state Super Dash
              \----PFSM ---- Transitions for state: Transition on QUAKE to state Quake
              \----PFSM ---- Transitions for state: Transition on PURE SEED to state Pure Seed
              \----PFSM ---- Transitions for state: Transition on KINGS BRAND to state King's Brand
              \----PFSM ---- Actions for state: Actions on Item Choice ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Item Choice ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Item Choice ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Item Choice ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Item Choice ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Item Choice ::: BoolTest
              \----PFSM ---- Actions for state: Actions on Item Choice ::: BoolTest
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = True
              \----PFSM ---- BoolTest (boolVariable?.Name) = Dash Cloak
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = DASH
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Mantis Claw
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = WALLJUMP
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Journal
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = JOURNAL
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Super Dash
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = S DASH
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Quake
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = QUAKE
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = Pure Seed
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = QUAKE
              \----PFSM ---- BoolTest (Name) = 
              \----PFSM ---- BoolTest (boolVariable) = False
              \----PFSM ---- BoolTest (boolVariable?.Name) = King's Brand
              \----PFSM ---- BoolTest (isFalse) = 
              \----PFSM ---- BoolTest (isTrue) = KINGS BRAND
              \----PFSM StateName: Trinket?
              \----PFSM ---- Transitions for state: Transition on TRINKET to state Trink Flash
              \----PFSM ---- Transitions for state: Transition on FINISHED to state 
              \----PFSM ---- Actions for state: Actions on Trinket? ::: IntCompare
              \----PFSM ---- IntCompare (Name) = 
              \----PFSM ---- IntCompare (integer1) = 0
              \----PFSM ---- IntCompare (integer2) = 0
              \----PFSM ---- IntCompare (greaterThan) = TRINKET
              \----PFSM ---- IntCompare (lessThan) = FINISHED
              \----PFSM ---- IntCompare (equal) = FINISHED
              \----PFSM ---- IntCompare (everyFrame) = False
              \----PFSM StateName: Trinket Type
              \----PFSM ---- Transitions for state: Transition on TRINK 1 to state Trink 1
              \----PFSM ---- Transitions for state: Transition on TRINK 2 to state Trink 2
              \----PFSM ---- Transitions for state: Transition on TRINK 3 to state Trink 3
              \----PFSM ---- Transitions for state: Transition on TRINK 4 to state Trink 4
              \----PFSM ---- Transitions for state: Transition on ODD KEY to state Odd Key
              \----PFSM ---- Transitions for state: Transition on TRAMPASS to state Tram pass
              \----PFSM ---- Transitions for state: Transition on WATERWAY KEY to state Waterway Key
              \----PFSM ---- Transitions for state: Transition on STORE KEY to state Store Key
              \----PFSM ---- Transitions for state: Transition on CITY KEY to state City Key
              \----PFSM ---- Transitions for state: Transition on LOVE KEY to state Love Key
              \----PFSM ---- Transitions for state: Transition on EGG to state Egg
              \----PFSM ---- Transitions for state: Transition on SIMPLE KEY to state Simple Key
              \----PFSM ---- Transitions for state: Transition on NOTCH to state Notch
              \----PFSM ---- Transitions for state: Transition on ORE to state Ore
              \----PFSM ---- Transitions for state: Transition on GOLD HEART to state G Heart
              \----PFSM ---- Transitions for state: Transition on GOLD GREED to state G Greed
              \----PFSM ---- Transitions for state: Transition on GOLD STRENGTH to state G Strength
              \----PFSM ---- Actions for state: Actions on Trinket Type ::: IntSwitch
              \----PFSM StateName: Trink Flash
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trinket Type
              \----PFSM ---- Actions for state: Actions on Trink Flash ::: AudioStop
              \----PFSM ---- Actions for state: Actions on Trink Flash ::: AudioPlaySimple
              \----PFSM ---- Actions for state: Actions on Trink Flash ::: SpawnObjectFromGlobalPool
              \----PFSM ---- Actions for state: Actions on Trink Flash ::: SetSpriteRenderer
              \----PFSM ---- Actions for state: Actions on Trink Flash ::: Tk2dPlayAnimation
              \----PFSM ---- Actions for state: Actions on Trink Flash ::: SpawnObjectFromGlobalPool
              \----PFSM ---- Actions for state: Actions on Trink Flash ::: FindChild
              \----PFSM ---- Actions for state: Actions on Trink Flash ::: FindChild
              \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1      :: IsNone? = False
              \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None      :: IsNone? = False
              \----PFSM ---- AudioPlaySimple(FsmObject, ) = shiny_item_pickup (UnityEngine.AudioClip)      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool (Name) = 
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, ) = Item Get Effect R      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmVector3, ) = (0.0, -0.8, -1.0)      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, Hero) = Knight      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, ) = None      :: IsNone? = True
              \----PFSM ---- Tk2dPlayAnimation (Name) = 
              \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
              \----PFSM ---- Tk2dPlayAnimation (clipName) = Collect Normal 2
              \----PFSM ---- SpawnObjectFromGlobalPool (Name) = 
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, ) = Relic Get Msg      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, ) = None      :: IsNone? = False
              \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, Msg) = None      :: IsNone? = False
              \----PFSM StateName: Trink 1
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on Trink 1 ::: IncrementPlayerDataInt
              \----PFSM ---- Actions for state: Actions on Trink 1 ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Trink 1 ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on Trink 1 ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on Trink 1 ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on Trink 1 ::: SendMessage
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = foundTrinket1
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = INV_NAME_TRINKET1
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM StateName: Trink 2
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on Trink 2 ::: IncrementPlayerDataInt
              \----PFSM ---- Actions for state: Actions on Trink 2 ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Trink 2 ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on Trink 2 ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on Trink 2 ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on Trink 2 ::: SendMessage
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = foundTrinket2
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = INV_NAME_TRINKET2
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM StateName: Trink 3
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on Trink 3 ::: IncrementPlayerDataInt
              \----PFSM ---- Actions for state: Actions on Trink 3 ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Trink 3 ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on Trink 3 ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on Trink 3 ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on Trink 3 ::: SendMessage
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = foundTrinket3
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = INV_NAME_TRINKET3
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM StateName: Trink 4
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on Trink 4 ::: IncrementPlayerDataInt
              \----PFSM ---- Actions for state: Actions on Trink 4 ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Trink 4 ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on Trink 4 ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on Trink 4 ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on Trink 4 ::: SendMessage
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = foundTrinket4
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = INV_NAME_TRINKET4
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM StateName: Trink Pause
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Hero Up
              \----PFSM ---- Transitions for state: Transition on HERO DAMAGED to state Finish
              \----PFSM ---- Actions for state: Actions on Trink Pause ::: Wait
              \----PFSM ---- Wait(String, finishEvent) = FINISHED
              \----PFSM ---- Wait(Boolean, realTime) = False
              \----PFSM ---- Wait(FsmFloat, ) = 1      :: IsNone? = False
              \----PFSM StateName: Walljump
              \----PFSM ---- Transitions for state: Transition on GET ITEM MSG END to state Hero Up
              \----PFSM ---- Actions for state: Actions on Walljump ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Walljump ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Walljump ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Walljump ::: CreateUIMsgGetItem
              \----PFSM ---- Actions for state: Actions on Walljump ::: SetFsmString
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = canWallJump
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasWalljump
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = corn_fungalWastesLeft
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetFsmString (Name) = 
              \----PFSM ---- SetFsmString (GameObject) = None
              \----PFSM ---- SetFsmString (OwnerOption) = SpecifyGameObject
              \----PFSM ---- SetFsmString (fsmName) = Msg Control
              \----PFSM ---- SetFsmString (variableName) = Item
              \----PFSM ---- SetFsmString (setValue) = Walljump
              \----PFSM StateName: Journal
              \----PFSM ---- Transitions for state: Transition on GET ITEM MSG END to state Hero Up
              \----PFSM ---- Actions for state: Actions on Journal ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Journal ::: CreateUIMsgGetItem
              \----PFSM ---- Actions for state: Actions on Journal ::: SetFsmString
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasJournal
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetFsmString (Name) = 
              \----PFSM ---- SetFsmString (GameObject) = None
              \----PFSM ---- SetFsmString (OwnerOption) = SpecifyGameObject
              \----PFSM ---- SetFsmString (fsmName) = Msg Control
              \----PFSM ---- SetFsmString (variableName) = Item
              \----PFSM ---- SetFsmString (setValue) = Journal
              \----PFSM StateName: Super Dash
              \----PFSM ---- Transitions for state: Transition on GET ITEM MSG END to state Hero Up
              \----PFSM ---- Actions for state: Actions on Super Dash ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Super Dash ::: CreateUIMsgGetItem
              \----PFSM ---- Actions for state: Actions on Super Dash ::: SetFsmString
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasSuperDash
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetFsmString (Name) = 
              \----PFSM ---- SetFsmString (GameObject) = None
              \----PFSM ---- SetFsmString (OwnerOption) = SpecifyGameObject
              \----PFSM ---- SetFsmString (fsmName) = Msg Control
              \----PFSM ---- SetFsmString (variableName) = Item
              \----PFSM ---- SetFsmString (setValue) = Super Dash
              \----PFSM StateName: Odd Key
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on Odd Key ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Odd Key ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on Odd Key ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on Odd Key ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on Odd Key ::: SendMessage
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasMenderKey
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = INV_NAME_MENDERKEY
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM StateName: Quake
              \----PFSM ---- Transitions for state: Transition on GET ITEM MSG END to state Hero Up
              \----PFSM ---- Actions for state: Actions on Quake ::: SetPlayerDataInt
              \----PFSM ---- Actions for state: Actions on Quake ::: CreateUIMsgGetItem
              \----PFSM ---- Actions for state: Actions on Quake ::: SetFsmString
              \----PFSM ---- SetPlayerDataInt (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = 1
              \----PFSM ---- SetPlayerDataInt (boolName) = quakeLevel
              \----PFSM ---- SetPlayerDataInt (storeValue) = 
              \----PFSM ---- SetFsmString (Name) = 
              \----PFSM ---- SetFsmString (GameObject) = None
              \----PFSM ---- SetFsmString (OwnerOption) = SpecifyGameObject
              \----PFSM ---- SetFsmString (fsmName) = Msg Control
              \----PFSM ---- SetFsmString (variableName) = Item
              \----PFSM ---- SetFsmString (setValue) = Quake
              \----PFSM StateName: Tram pass
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on Tram pass ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Tram pass ::: CallMethodProper
              \----PFSM ---- Actions for state: Actions on Tram pass ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on Tram pass ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on Tram pass ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on Tram pass ::: SendMessage
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasTramPass
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- CallMethodProper(FsmString, ) = GameManager      :: IsNone? = False
              \----PFSM ---- CallMethodProper(FsmGameObject, GameManager) = _GameManager      :: IsNone? = False
              \----PFSM ---- CallMethodProper(FsmString, ) = AddToScenesVisited      :: IsNone? = False
              \----PFSM ---- CallMethodProper(FsmVar, ) = Deepnest_26_b      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = Deepnest_26_b      :::::::::::::::::::
              \----PFSM ---- CallMethodProper(FsmVar, ) = 0      :: IsNone? = True      :: useVariable? = True      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = 
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = INV_NAME_TRAM_PASS
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM StateName: Waterway Key
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on Waterway Key ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Waterway Key ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on Waterway Key ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on Waterway Key ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on Waterway Key ::: SendMessage
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasWaterwaysKey
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = INV_NAME_WATERWAYSKEY
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM StateName: Store Key
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on Store Key ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Store Key ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on Store Key ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on Store Key ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on Store Key ::: SendMessage
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasSlykey
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = INV_NAME_STOREKEY
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM StateName: City Key
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on City Key ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on City Key ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on City Key ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on City Key ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on City Key ::: SendMessage
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasCityKey
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = INV_NAME_CITYKEY
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM StateName: Pure Seed
              \----PFSM ---- Transitions for state: Transition on GET ITEM MSG END to state Hero Up
              \----PFSM ---- Actions for state: Actions on Pure Seed ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Pure Seed ::: CreateUIMsgGetItem
              \----PFSM ---- Actions for state: Actions on Pure Seed ::: SetFsmString
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = False
              \----PFSM ---- SetPlayerDataBool (boolName) = hasAcidArmour
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetFsmString (Name) = 
              \----PFSM ---- SetFsmString (GameObject) = None
              \----PFSM ---- SetFsmString (OwnerOption) = SpecifyGameObject
              \----PFSM ---- SetFsmString (fsmName) = Msg Control
              \----PFSM ---- SetFsmString (variableName) = Item
              \----PFSM ---- SetFsmString (setValue) = Pure Seed
              \----PFSM StateName: Love Key
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on Love Key ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Love Key ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on Love Key ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on Love Key ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on Love Key ::: SendMessage
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasLoveKey
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = INV_NAME_LOVEKEY
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM StateName: King's Brand
              \----PFSM ---- Transitions for state: Transition on GET ITEM MSG END to state Hero Up
              \----PFSM ---- Actions for state: Actions on King's Brand ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on King's Brand ::: CreateUIMsgGetItem
              \----PFSM ---- Actions for state: Actions on King's Brand ::: SetFsmString
              \----PFSM ---- Actions for state: Actions on King's Brand ::: CallMethodProper
              \----PFSM ---- Actions for state: Actions on King's Brand ::: SendMessage
              \----PFSM ---- Actions for state: Actions on King's Brand ::: SendMessage
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasKingsBrand
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetFsmString (Name) = 
              \----PFSM ---- SetFsmString (GameObject) = None
              \----PFSM ---- SetFsmString (OwnerOption) = SpecifyGameObject
              \----PFSM ---- SetFsmString (fsmName) = Msg Control
              \----PFSM ---- SetFsmString (variableName) = Item
              \----PFSM ---- SetFsmString (setValue) = Kings Brand
              \----PFSM ---- CallMethodProper(FsmString, ) = HeroController      :: IsNone? = False
              \----PFSM ---- CallMethodProper(FsmGameObject, Hero) = Knight      :: IsNone? = False
              \----PFSM ---- CallMethodProper(FsmString, ) = SetBenchRespawn      :: IsNone? = False
              \----PFSM ---- CallMethodProper(FsmVar, ) = Death Respawn Marker      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = Death Respawn Marker      :::::::::::::::::::(FsmVar, ) = Room_Wyrm      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = Room_Wyrm      :::::::::::::::::::(FsmVar, ) = 0      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? =       :::::::::::::::::::(FsmVar, ) = True      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? =       :::::::::::::::::::
              \----PFSM ---- CallMethodProper(FsmVar, ) = 0      :: IsNone? = True      :: useVariable? = True      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = 
              \----PFSM StateName: Fade Out
              \----PFSM ---- Transitions for state: Transition on FINISHED to state New Scene
              \----PFSM ---- Actions for state: Actions on Fade Out ::: SendMessage
              \----PFSM ---- Actions for state: Actions on Fade Out ::: SendMessage
              \----PFSM ---- Actions for state: Actions on Fade Out ::: SetFsmFloat
              \----PFSM ---- Actions for state: Actions on Fade Out ::: SendEventByName
              \----PFSM ---- Actions for state: Actions on Fade Out ::: Wait
              \----PFSM ---- SendEventByName (Name) = 
              \----PFSM ---- SendEventByName (delay) = 0
              \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = HUD Blanker White
              \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
              \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
              \----PFSM ---- SendEventByName (sendEvent) = FADE IN
              \----PFSM ---- Wait(String, finishEvent) = FINISHED
              \----PFSM ---- Wait(Boolean, realTime) = False
              \----PFSM ---- Wait(FsmFloat, ) = 2      :: IsNone? = False
              \----PFSM StateName: New Scene
              \----PFSM ---- Actions for state: Actions on New Scene ::: SetFsmBool
              \----PFSM ---- Actions for state: Actions on New Scene ::: SetFsmBool
              \----PFSM ---- Actions for state: Actions on New Scene ::: CallMethodProper
              \----PFSM ---- Actions for state: Actions on New Scene ::: GetPlayerDataString
              \----PFSM ---- Actions for state: Actions on New Scene ::: CallMethodProper
              \----PFSM ---- SetFsmBool (Name) = 
              \----PFSM ---- SetFsmBool (GameObject) = tk2dCamera
              \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
              \----PFSM ---- SetFsmBool (fsmName) = CameraFade
              \----PFSM ---- SetFsmBool (variableName) = No Fade
              \----PFSM ---- SetFsmBool (setValue) = True
              \----PFSM ---- SetFsmBool (Name) = 
              \----PFSM ---- SetFsmBool (GameObject) = Knight
              \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
              \----PFSM ---- SetFsmBool (fsmName) = Dream Return
              \----PFSM ---- SetFsmBool (variableName) = Dream Returning
              \----PFSM ---- SetFsmBool (setValue) = True
              \----PFSM ---- CallMethodProper(FsmString, ) = HeroController      :: IsNone? = False
              \----PFSM ---- CallMethodProper(FsmGameObject, Hero) = Knight      :: IsNone? = False
              \----PFSM ---- CallMethodProper(FsmString, ) = EnterWithoutInput      :: IsNone? = False
              \----PFSM ---- CallMethodProper(FsmVar, ) = True      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? =       :::::::::::::::::::
              \----PFSM ---- CallMethodProper(FsmVar, ) = 0      :: IsNone? = True      :: useVariable? = True      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = 
              \----PFSM ---- CallMethodProper(FsmString, ) = GameManager      :: IsNone? = False
              \----PFSM ---- CallMethodProper(FsmGameObject, GameManager) = _GameManager      :: IsNone? = False
              \----PFSM ---- CallMethodProper(FsmString, ) = ChangeToScene      :: IsNone? = False
              \----PFSM ---- CallMethodProper(FsmVar, Return Scene) = Crossroads_10      :: IsNone? = False      :: useVariable? = True      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = Crossroads_10      :::::::::::::::::::(FsmVar, Return Door) = door_dreamReturn      :: IsNone? = False      :: useVariable? = True      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = door_dreamReturn      :::::::::::::::::::(FsmVar, ) = 0      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? =       :::::::::::::::::::
              \----PFSM ---- CallMethodProper(FsmVar, ) = 0      :: IsNone? = True      :: useVariable? = True      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = 
              \----PFSM StateName: Fade Pause
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Fade Out
              \----PFSM ---- Actions for state: Actions on Fade Pause ::: Wait
              \----PFSM ---- Actions for state: Actions on Fade Pause ::: SendEventByName
              \----PFSM ---- Wait(String, finishEvent) = FINISHED
              \----PFSM ---- Wait(Boolean, realTime) = False
              \----PFSM ---- Wait(FsmFloat, ) = 0.75      :: IsNone? = False
              \----PFSM ---- SendEventByName (Name) = 
              \----PFSM ---- SendEventByName (delay) = 0
              \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
              \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
              \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
              \----PFSM ---- SendEventByName (sendEvent) = WHITE PALACE END
              \----PFSM StateName: Slug Fling
              \----PFSM ---- Transitions for state: Transition on FINISHED to state In Air
              \----PFSM ---- Actions for state: Actions on Slug Fling ::: FlingObject
              \----PFSM ---- FlingObject (Name) = 
              \----PFSM ---- FlingObject (flungObject?.GameObject?.Name) = 
              \----PFSM StateName: Egg
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on Egg ::: IncrementPlayerDataInt
              \----PFSM ---- Actions for state: Actions on Egg ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on Egg ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on Egg ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on Egg ::: SendMessage
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = INV_NAME_RANCIDEGG
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM StateName: Simple Key
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on Simple Key ::: IncrementPlayerDataInt
              \----PFSM ---- Actions for state: Actions on Simple Key ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on Simple Key ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on Simple Key ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on Simple Key ::: SendMessage
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = INV_NAME_SIMPLEKEY
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM StateName: Notch
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on Notch ::: IncrementPlayerDataInt
              \----PFSM ---- Actions for state: Actions on Notch ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on Notch ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on Notch ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on Notch ::: SendMessage
              \----PFSM ---- Actions for state: Actions on Notch ::: SendMessage
              \----PFSM ---- Actions for state: Actions on Notch ::: SendEventByName
              \----PFSM ---- Actions for state: Actions on Notch ::: SendEventByName
              \----PFSM ---- Actions for state: Actions on Notch ::: StringCompare
              \----PFSM ---- Actions for state: Actions on Notch ::: SetPlayerDataBool
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = INV_NAME_NOTCH
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM ---- SendEventByName (Name) = 
              \----PFSM ---- SendEventByName (delay) = 0
              \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
              \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
              \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
              \----PFSM ---- SendEventByName (sendEvent) = CHARM INDICATOR CHECK
              \----PFSM ---- SendEventByName (Name) = 
              \----PFSM ---- SendEventByName (delay) = 0
              \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
              \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
              \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
              \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
              \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
              \----PFSM ---- SendEventByName (sendEvent) = HUD IN
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasDash
              \----PFSM ---- SetPlayerDataBool (storeValue) = PD Bool Name
              \----PFSM StateName: Ore
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on Ore ::: IncrementPlayerDataInt
              \----PFSM ---- Actions for state: Actions on Ore ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on Ore ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on Ore ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on Ore ::: StringCompare
              \----PFSM ---- Actions for state: Actions on Ore ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on Ore ::: SendMessage
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = INV_NAME_ORE
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = hasDash
              \----PFSM ---- SetPlayerDataBool (storeValue) = PD Bool Name
              \----PFSM StateName: Fling Grub
              \----PFSM ---- Transitions for state: Transition on FINISHED to state In Air
              \----PFSM ---- Actions for state: Actions on Fling Grub ::: FlingObject
              \----PFSM ---- FlingObject (Name) = 
              \----PFSM ---- FlingObject (flungObject?.GameObject?.Name) = 
              \----PFSM StateName: Fling Bubble
              \----PFSM ---- Transitions for state: Transition on FINISHED to state In Air
              \----PFSM ---- Actions for state: Actions on Fling Bubble ::: FlingObject
              \----PFSM ---- FlingObject (Name) = 
              \----PFSM ---- FlingObject (flungObject?.GameObject?.Name) = 
              \----PFSM StateName: G Heart
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on G Heart ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on G Heart ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on G Heart ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on G Heart ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on G Heart ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on G Heart ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on G Heart ::: SetPlayerDataBool
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = CHARM_NAME_23_G
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = False
              \----PFSM ---- SetPlayerDataBool (boolName) = gaveFragileHeart
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = fragileHealth_unbreakable
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = gotCharm_23
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = newCharm_23
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM StateName: G Greed
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on G Greed ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on G Greed ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on G Greed ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on G Greed ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on G Greed ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on G Greed ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on G Greed ::: SetPlayerDataBool
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = CHARM_NAME_24_G
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = False
              \----PFSM ---- SetPlayerDataBool (boolName) = gaveFragileGreed
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = fragileGreed_unbreakable
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = gotCharm_24
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = newCharm_24
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM StateName: G Strength
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Trink Pause
              \----PFSM ---- Actions for state: Actions on G Strength ::: SetSpriteRendererSprite
              \----PFSM ---- Actions for state: Actions on G Strength ::: GetLanguageString
              \----PFSM ---- Actions for state: Actions on G Strength ::: SetTextMeshProText
              \----PFSM ---- Actions for state: Actions on G Strength ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on G Strength ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on G Strength ::: SetPlayerDataBool
              \----PFSM ---- Actions for state: Actions on G Strength ::: SetPlayerDataBool
              \----PFSM ---- GetLanguageString (Name) = 
              \----PFSM ---- GetLanguageString (convName) = CHARM_NAME_25_G
              \----PFSM ---- GetLanguageString (convName?.Name) = 
              \----PFSM ---- GetLanguageString (sheetName) = UI
              \----PFSM ---- GetLanguageString (sheetName?.Name) = 
              \----PFSM ---- GetLanguageString (storeValue) = 
              \----PFSM ---- GetLanguageString (storeValue?.Name) = Item Name
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = False
              \----PFSM ---- SetPlayerDataBool (boolName) = gaveFragileStrength
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = fragileStrength_unbreakable
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = gotCharm_25
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \----PFSM ---- SetPlayerDataBool (Name) = 
              \----PFSM ---- SetPlayerDataInt (boolName) = True
              \----PFSM ---- SetPlayerDataBool (boolName) = newCharm_25
              \----PFSM ---- SetPlayerDataBool (storeValue) = 
              \--PFSM Active: False
              \--PFSM ActiveStateName: 
              \--Component: PlayMakerFixedUpdate
              \--Component: Rigidbody2D
              \--PrintRigidbody2D mass: 1
              \--PrintRigidbody2D velocity: (0.0, 0.0)
              \--PrintRigidbody2D drag: 0
              \--PrintRigidbody2D angularVelocity: 0
              \--PrintRigidbody2D angularDrag: 0.05
              \--PrintRigidbody2D gravityScale: 1
              \--PrintRigidbody2D isKinematic: False
              \--PrintRigidbody2D interpolation: None
              \--PrintRigidbody2D freezeRotation: True
              \--PrintRigidbody2D collisionDetectionMode: Continuous
              \--Component: ObjectBounce
              \--Component: BoxCollider2D
              \--BoxCollider2D Size: (0.4, 0.4)
              \--BoxCollider2D Offset: (0.0, 0.0)
              \--BoxCollider2D Bounds-Min: (23.2, 27.2, 0.1)
              \--BoxCollider2D Bounds-Max: (23.2, 27.2, 0.1)
              \--BoxCollider2D isTrigger: False
              \--Component: PersistentBoolItem
              \--PersistentBoolItem semiPersistent: False
              \--PersistentBoolItem id: 
              \--PersistentBoolItem sceneName: 
              \--PersistentBoolItem activated: False
              \--Component: PlayMakerFSM
              \--PFSM Name: Generate Wave
              \--PFSM FsmDescription: 
              \--PFSM StateNames
              \----PFSM StateName: Gen
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Wait
              \----PFSM ---- Actions for state: Actions on Gen ::: ActivateGameObject
              \----PFSM ---- ActivateGameObject (Name) = 
              \----PFSM ---- ActivateGameObject (GameObject) = White Wave
              \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
              \----PFSM ---- ActivateGameObject (activate) = True
              \----PFSM StateName: Init
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Wait
              \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
              \----PFSM ---- Actions for state: Actions on Init ::: SetScale
              \----PFSM ---- SetScale (Name) = 
              \----PFSM ---- SetScale (GameObject) = White Wave
              \----PFSM ---- SetScale (GameObject Name) = Wave
              \----PFSM ---- SetScale (GameObject V) = White Wave (UnityEngine.GameObject)
              \----PFSM ---- SetScale (GameObject VName) = White Wave
              \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
              \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
              \----PFSM ---- SetScale (vector Name) = 
              \----PFSM ---- SetScale (everyFrame) = False
              \----PFSM ---- SetScale (lateUpdate) = False
              \----PFSM ---- SetScale (x) = 0.35
              \----PFSM ---- SetScale (x Name) = 
              \----PFSM ---- SetScale (y) = 0.35
              \----PFSM ---- SetScale (y Name) = 
              \----PFSM ---- SetScale (z) = 0
              \----PFSM ---- SetScale (z Name) = 
              \----PFSM StateName: Wait
              \----PFSM ---- Transitions for state: Transition on FINISHED to state Gen
              \----PFSM ---- Actions for state: Actions on Wait ::: Wait
              \----PFSM ---- Wait(String, finishEvent) = FINISHED
              \----PFSM ---- Wait(Boolean, realTime) = False
              \----PFSM ---- Wait(FsmFloat, ) = 2.2      :: IsNone? = False
              \----PFSM StateName: Get
              \----PFSM StateName: Stopped
              \----PFSM ---- Transitions for state: Transition on START to state Gen
              \--PFSM Active: False
              \--PFSM ActiveStateName: 
              \--Component: AudioSource
Cloak Corpse\Shiny Item\Appear Trail
                         \--Component: Transform
                         \--GameObject activeSelf: True
                         \--GameObject layer: 2
                         \--GameObject tag: Untagged
                         \--Transform Position: (23.2, 27.2, 0.1)
                         \--Transform Rotation: (0.0, 0.0, 0.0)
                         \--Transform LocalScale: (0.7, 0.7, 0.7)
                         \--Component: ParticleSystem
                         \--Component: ParticleSystemRenderer
Cloak Corpse\Shiny Item\White Wave
                         \--Component: Transform
                         \--GameObject activeSelf: True
                         \--GameObject layer: 0
                         \--GameObject tag: Untagged
                         \--Transform Position: (23.2, 27.2, 0.1)
                         \--Transform Rotation: (0.0, 0.0, 0.0)
                         \--Transform LocalScale: (0.7, 0.7, 0.7)
                         \--Component: SpriteRenderer
                         \--Component: WaveEffectControl
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
