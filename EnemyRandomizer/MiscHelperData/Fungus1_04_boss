START =====================================================
Printing full hierarchy for scene: Fungus1_04_boss [Build index: 133]
Local scene index: 1
START =====================================================
Printing scene hierarchy for game object: Dreamer Scene 1
Dreamer Scene 1
 \--Component: Transform
 \--GameObject activeSelf: True
 \--GameObject layer: 13
 \--GameObject tag: Untagged
 \--Transform Position: (0.0, 0.0, 0.0)
 \--Transform Rotation: (0.0, 0.0, 0.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
 \--Component: BoxCollider2D
 \--BoxCollider2D Size: (14.5, 63.9)
 \--BoxCollider2D Offset: (19.5, 17.2)
 \--BoxCollider2D Bounds-Min: (0.0, 0.0, 0.0)
 \--BoxCollider2D Bounds-Max: (0.0, 0.0, 0.0)
 \--BoxCollider2D isTrigger: True
 \--Component: PlayMakerFSM
 \--PFSM Name: Control
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Pause
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Init
 \----PFSM ---- Actions for state: Actions on Pause ::: NextFrameEvent
 \----PFSM ---- NextFrameEvent(String, sendEvent) = FINISHED
 \----PFSM StateName: Init
 \----PFSM ---- Transitions for state: Transition on ACTIVATE to state Inert
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Idle
 \----PFSM ---- Actions for state: Actions on Init ::: PlayerDataBoolTest
 \----PFSM ---- Actions for state: Actions on Init ::: CreateObject
 \----PFSM ---- Actions for state: Actions on Init ::: SetFsmString
 \----PFSM ---- Actions for state: Actions on Init ::: CreateObject
 \----PFSM ---- Actions for state: Actions on Init ::: SetFsmString
 \----PFSM ---- Actions for state: Actions on Init ::: CreateObject
 \----PFSM ---- Actions for state: Actions on Init ::: SetFsmString
 \----PFSM ---- PlayerDataBoolTest (boolName) = dreamerScene1
 \----PFSM ---- PlayerDataBoolTest (bool.Value) = False
 \----PFSM ---- CreateObject(FsmGameObject, ) = Cutscene Dreamer      :: IsNone? = False
 \----PFSM ---- CreateObject(FsmVector3, ) = (42.8, -0.5, 0.0)      :: IsNone? = False
 \----PFSM ---- CreateObject(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
 \----PFSM ---- CreateObject(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- CreateObject(FsmGameObject, Hegemol) = Cutscene Dreamer(Clone)      :: IsNone? = False
 \----PFSM ---- CreateObject (networkGroup) = 0
 \----PFSM ---- CreateObject (networkInstantiate) = False
 \----PFSM ---- SetFsmString (Name) = 
 \----PFSM ---- SetFsmString (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetFsmString (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmString (fsmName) = Control
 \----PFSM ---- SetFsmString (variableName) = Name
 \----PFSM ---- SetFsmString (setValue) = Hegemol
 \----PFSM ---- CreateObject(FsmGameObject, ) = Cutscene Dreamer      :: IsNone? = False
 \----PFSM ---- CreateObject(FsmVector3, ) = (44.3, -2.9, 0.0)      :: IsNone? = False
 \----PFSM ---- CreateObject(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
 \----PFSM ---- CreateObject(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- CreateObject(FsmGameObject, Lurien) = Cutscene Dreamer(Clone)      :: IsNone? = False
 \----PFSM ---- CreateObject (networkGroup) = 0
 \----PFSM ---- CreateObject (networkInstantiate) = False
 \----PFSM ---- SetFsmString (Name) = 
 \----PFSM ---- SetFsmString (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetFsmString (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmString (fsmName) = Control
 \----PFSM ---- SetFsmString (variableName) = Name
 \----PFSM ---- SetFsmString (setValue) = Lurien
 \----PFSM ---- CreateObject(FsmGameObject, ) = Cutscene Dreamer      :: IsNone? = False
 \----PFSM ---- CreateObject(FsmVector3, ) = (39.9, 1.0, 0.0)      :: IsNone? = False
 \----PFSM ---- CreateObject(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
 \----PFSM ---- CreateObject(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- CreateObject(FsmGameObject, Monomon) = Cutscene Dreamer(Clone)      :: IsNone? = False
 \----PFSM ---- CreateObject (networkGroup) = 0
 \----PFSM ---- CreateObject (networkInstantiate) = False
 \----PFSM ---- SetFsmString (Name) = 
 \----PFSM ---- SetFsmString (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetFsmString (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmString (fsmName) = Control
 \----PFSM ---- SetFsmString (variableName) = Name
 \----PFSM ---- SetFsmString (setValue) = Monomon
 \----PFSM StateName: Inert
 \----PFSM StateName: Idle
 \----PFSM ---- Transitions for state: Transition on ENTER to state Take Control
 \----PFSM ---- Actions for state: Actions on Idle ::: Trigger2dEvent
 \----PFSM StateName: Take Control
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Blast
 \----PFSM ---- Actions for state: Actions on Take Control ::: SetPlayerDataBool
 \----PFSM ---- Actions for state: Actions on Take Control ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Take Control ::: SendMessage
 \----PFSM ---- Actions for state: Actions on Take Control ::: SendMessage
 \----PFSM ---- Actions for state: Actions on Take Control ::: SendMessage
 \----PFSM ---- SetPlayerDataBool (Name) = 
 \----PFSM ---- SetPlayerDataInt (boolName) = True
 \----PFSM ---- SetPlayerDataBool (boolName) = dreamerScene1
 \----PFSM ---- SetPlayerDataBool (storeValue) = 
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Hero
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = FSM CANCEL
 \----PFSM StateName: Blast
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Hero Fall
 \----PFSM ---- Actions for state: Actions on Blast ::: CreateObject
 \----PFSM ---- Actions for state: Actions on Blast ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Blast ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Blast ::: GetPosition
 \----PFSM ---- Actions for state: Actions on Blast ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Blast ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Blast ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Blast ::: SendMessage
 \----PFSM ---- Actions for state: Actions on Blast ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Blast ::: SetVelocity2d
 \----PFSM ---- Actions for state: Actions on Blast ::: SetFsmBool
 \----PFSM ---- CreateObject(FsmGameObject, ) = dream_area_effect      :: IsNone? = False
 \----PFSM ---- CreateObject(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
 \----PFSM ---- CreateObject(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
 \----PFSM ---- CreateObject(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- CreateObject(FsmGameObject, ) = None      :: IsNone? = True
 \----PFSM ---- CreateObject (networkGroup) = 0
 \----PFSM ---- CreateObject (networkInstantiate) = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmObject, a?.audioClip) = hero_fury_charm_burst (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(AudioClip, a?.audioClip?.Value) = hero_fury_charm_burst (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioPlayer?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.audioPlayer?.Value) = Audio Player Actor (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.spawnPoint?.Name) = Hero
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.spawnPoint?.Value) = Knight (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0.85      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0.85      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmObject, a?.audioClip) = hero_quake_spell_impact (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(AudioClip, a?.audioClip?.Value) = hero_quake_spell_impact (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioPlayer?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.audioPlayer?.Value) = Audio Player Actor (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.spawnPoint?.Name) = Hero
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.spawnPoint?.Value) = Knight (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0      :: IsNone? = False
 \----PFSM ---- GetPosition (Name) = 
 \----PFSM ---- GetPosition (GameObject) = Knight
 \----PFSM ---- GetPosition (GameObject Name) = Hero
 \----PFSM ---- GetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- GetPosition (vector Name) = Hero Pos
 \----PFSM ---- GetPosition (everyFrame) = False
 \----PFSM ---- GetPosition (space) = World
 \----PFSM ---- GetPosition(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- GetPosition(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- GetPosition(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- GetPosition(FsmVector3, Hero Pos) = (0.0, 0.0, 0.0)      :: IsNone? = False
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = Init Blast
 \----PFSM ---- SetPosition (GameObject Name) = Init Blast
 \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetPosition (vector Name) = Hero Pos
 \----PFSM ---- SetPosition (everyFrame) = False
 \----PFSM ---- SetPosition (space) = World
 \----PFSM ---- SetPosition (lateUpdate) = False
 \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- SetPosition(FsmFloat, ) = 0.1      :: IsNone? = False
 \----PFSM ---- SetPosition(FsmVector3, Hero Pos) = (0.0, 0.0, 0.0)      :: IsNone? = False
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Init Blast
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = BigShake
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Collect Magical Fall
 \----PFSM ---- SetVelocity2d (Name) = 
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject) = Knight
 \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = Hero
 \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
 \----PFSM ---- SetVelocity2d (x) = 0
 \----PFSM ---- SetVelocity2d (y) = -10
 \----PFSM ---- SetVelocity2d (vector?.Value name) = 
 \----PFSM ---- SetVelocity2d (x name) = 
 \----PFSM ---- SetVelocity2d (y name) = 
 \----PFSM ---- SetVelocity2d (everyFrame) = False
 \----PFSM ---- SetFsmBool (Name) = 
 \----PFSM ---- SetFsmBool (GameObject) = CameraParent
 \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmBool (fsmName) = CameraShake
 \----PFSM ---- SetFsmBool (variableName) = RumblingMed
 \----PFSM ---- SetFsmBool (setValue) = True
 \----PFSM StateName: Hero Fall
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Land
 \----PFSM ---- Actions for state: Actions on Hero Fall ::: GetPosition
 \----PFSM ---- Actions for state: Actions on Hero Fall ::: FloatCompare
 \----PFSM ---- GetPosition (Name) = 
 \----PFSM ---- GetPosition (GameObject) = Knight
 \----PFSM ---- GetPosition (GameObject Name) = Hero
 \----PFSM ---- GetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- GetPosition (vector Name) = 
 \----PFSM ---- GetPosition (everyFrame) = True
 \----PFSM ---- GetPosition (space) = World
 \----PFSM ---- GetPosition(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- GetPosition(FsmFloat, Knight Y) = 0      :: IsNone? = False
 \----PFSM ---- GetPosition(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- GetPosition(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
 \----PFSM ---- FloatCompare (Name) = 
 \----PFSM ---- FloatCompare (float1) = 0
 \----PFSM ---- FloatCompare (float2) = 28.5
 \----PFSM ---- FloatCompare (float1 Name) = Knight Y
 \----PFSM ---- FloatCompare (float2 Name) = Knight Scene Y
 \----PFSM ---- FloatCompare (greaterThan) = 
 \----PFSM ---- FloatCompare (lessThan) = FINISHED
 \----PFSM ---- FloatCompare (equal) = FINISHED
 \----PFSM ---- FloatCompare (everyFrame) = True
 \----PFSM StateName: Land
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Box Up
 \----PFSM ---- Actions for state: Actions on Land ::: Tk2dPlayAnimation
 \----PFSM ---- Actions for state: Actions on Land ::: Wait
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Dreamer Land
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 2      :: IsNone? = False
 \----PFSM StateName: Lurien Appear
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Monomon Appear
 \----PFSM ---- Actions for state: Actions on Lurien Appear ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Lurien Appear ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Lurien Appear ::: SetScale
 \----PFSM ---- Actions for state: Actions on Lurien Appear ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Lurien Appear ::: Wait
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetPosition (GameObject Name) = Lurien
 \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetPosition (vector Name) = 
 \----PFSM ---- SetPosition (everyFrame) = False
 \----PFSM ---- SetPosition (space) = World
 \----PFSM ---- SetPosition (lateUpdate) = False
 \----PFSM ---- SetPosition(FsmFloat, ) = 23.37      :: IsNone? = False
 \----PFSM ---- SetPosition(FsmFloat, ) = 33.05      :: IsNone? = False
 \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- SetPosition(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmObject, a?.audioClip) = dream_enter_pt_2 (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(AudioClip, a?.audioClip?.Value) = dream_enter_pt_2 (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioPlayer?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.audioPlayer?.Value) = Audio Player Actor (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.spawnPoint?.Name) = Hero
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.spawnPoint?.Value) = Knight (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0      :: IsNone? = False
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetScale (GameObject Name) = Lurien
 \----PFSM ---- SetScale (GameObject V) = Cutscene Dreamer(Clone) (UnityEngine.GameObject)
 \----PFSM ---- SetScale (GameObject VName) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (vector Name) = 
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 1
 \----PFSM ---- SetScale (x Name) = 
 \----PFSM ---- SetScale (y) = 0
 \----PFSM ---- SetScale (y Name) = 
 \----PFSM ---- SetScale (z) = 0
 \----PFSM ---- SetScale (z Name) = 
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Lurien
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = FORM
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.5      :: IsNone? = False
 \----PFSM StateName: Box Up
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Convo 1
 \----PFSM ---- Actions for state: Actions on Box Up ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Box Up ::: Wait
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = DialogueManager
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = BOX UP DREAM
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.3      :: IsNone? = False
 \----PFSM StateName: Convo 1
 \----PFSM ---- Transitions for state: Transition on CONVO_FINISH to state Convo 2
 \----PFSM ---- Actions for state: Actions on Convo 1 ::: SetTextMeshProAlignment
 \----PFSM ---- Actions for state: Actions on Convo 1 ::: CallMethodProper
 \----PFSM ---- CallMethodProper(FsmString, ) = DialogueBox      :: IsNone? = False
 \----PFSM ---- CallMethodProper(FsmGameObject, DialogueText) = Text      :: IsNone? = False
 \----PFSM ---- CallMethodProper(FsmString, ) = StartConversation      :: IsNone? = False
 \----PFSM ---- CallMethodProper(FsmVar, ) = DREAMERS_EC1_1      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = DREAMERS_EC1_1      :::::::::::::::::::(FsmVar, ) = Dreamers      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = Dreamers      :::::::::::::::::::
 \----PFSM ---- CallMethodProper(FsmVar, ) = 0      :: IsNone? = True      :: useVariable? = True      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = 
 \----PFSM StateName: Box Down
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Lurien Appear
 \----PFSM ---- Actions for state: Actions on Box Down ::: SetTextMeshProAlignment
 \----PFSM ---- Actions for state: Actions on Box Down ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Box Down ::: Wait
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = DialogueManager
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = BOX DOWN DREAM
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.8      :: IsNone? = False
 \----PFSM StateName: Monomon Appear
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Hegemol Appear
 \----PFSM ---- Actions for state: Actions on Monomon Appear ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Monomon Appear ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Monomon Appear ::: SetScale
 \----PFSM ---- Actions for state: Actions on Monomon Appear ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Monomon Appear ::: Wait
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetPosition (GameObject Name) = Monomon
 \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetPosition (vector Name) = 
 \----PFSM ---- SetPosition (everyFrame) = False
 \----PFSM ---- SetPosition (space) = World
 \----PFSM ---- SetPosition (lateUpdate) = False
 \----PFSM ---- SetPosition(FsmFloat, ) = 30.64      :: IsNone? = False
 \----PFSM ---- SetPosition(FsmFloat, ) = 35.15      :: IsNone? = False
 \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- SetPosition(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmObject, a?.audioClip) = dream_enter_pt_2 (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(AudioClip, a?.audioClip?.Value) = dream_enter_pt_2 (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioPlayer?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.audioPlayer?.Value) = Audio Player Actor (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.spawnPoint?.Name) = Hero
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.spawnPoint?.Value) = Knight (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1.15      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1.15      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0      :: IsNone? = False
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetScale (GameObject Name) = Monomon
 \----PFSM ---- SetScale (GameObject V) = Cutscene Dreamer(Clone) (UnityEngine.GameObject)
 \----PFSM ---- SetScale (GameObject VName) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (vector Name) = 
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 1
 \----PFSM ---- SetScale (x Name) = 
 \----PFSM ---- SetScale (y) = 0
 \----PFSM ---- SetScale (y Name) = 
 \----PFSM ---- SetScale (z) = 0
 \----PFSM ---- SetScale (z Name) = 
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Monomon
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = FORM
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.5      :: IsNone? = False
 \----PFSM StateName: Hegemol Appear
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Casting
 \----PFSM ---- Actions for state: Actions on Hegemol Appear ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Hegemol Appear ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Hegemol Appear ::: SetScale
 \----PFSM ---- Actions for state: Actions on Hegemol Appear ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Hegemol Appear ::: Wait
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetPosition (GameObject Name) = Hegemol
 \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetPosition (vector Name) = 
 \----PFSM ---- SetPosition (everyFrame) = False
 \----PFSM ---- SetPosition (space) = World
 \----PFSM ---- SetPosition (lateUpdate) = False
 \----PFSM ---- SetPosition(FsmFloat, ) = 19.22      :: IsNone? = False
 \----PFSM ---- SetPosition(FsmFloat, ) = 34.92      :: IsNone? = False
 \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- SetPosition(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmObject, a?.audioClip) = dream_enter_pt_2 (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(AudioClip, a?.audioClip?.Value) = dream_enter_pt_2 (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioPlayer?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.audioPlayer?.Value) = Audio Player Actor (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.spawnPoint?.Name) = Hero
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.spawnPoint?.Value) = Knight (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0.85      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0.85      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0      :: IsNone? = False
 \----PFSM ---- SetScale (Name) = 
 \----PFSM ---- SetScale (GameObject) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetScale (GameObject Name) = Hegemol
 \----PFSM ---- SetScale (GameObject V) = Cutscene Dreamer(Clone) (UnityEngine.GameObject)
 \----PFSM ---- SetScale (GameObject VName) = Cutscene Dreamer(Clone)
 \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetScale (vector Name) = 
 \----PFSM ---- SetScale (everyFrame) = False
 \----PFSM ---- SetScale (lateUpdate) = False
 \----PFSM ---- SetScale (x) = 1
 \----PFSM ---- SetScale (x Name) = 
 \----PFSM ---- SetScale (y) = 0
 \----PFSM ---- SetScale (y Name) = 
 \----PFSM ---- SetScale (z) = 0
 \----PFSM ---- SetScale (z Name) = 
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Hegemol
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = FORM
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.5      :: IsNone? = False
 \----PFSM StateName: Casting
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Blast Down
 \----PFSM ---- Actions for state: Actions on Casting ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Casting ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Casting ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Casting ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Casting ::: SetFsmBool
 \----PFSM ---- Actions for state: Actions on Casting ::: SetFsmBool
 \----PFSM ---- Actions for state: Actions on Casting ::: Wait
 \----PFSM ---- Actions for state: Actions on Casting ::: SetFsmFloat
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Hegemol
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = CAST
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmObject, a?.audioClip) = ghost_dialogue_death_initial_white (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(AudioClip, a?.audioClip?.Value) = ghost_dialogue_death_initial_white (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioPlayer?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.audioPlayer?.Value) = Audio Player Actor (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.spawnPoint?.Name) = Hero
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.spawnPoint?.Value) = Knight (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0      :: IsNone? = False
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Lurien
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = CAST
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Monomon
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = CAST
 \----PFSM ---- SetFsmBool (Name) = 
 \----PFSM ---- SetFsmBool (GameObject) = CameraParent
 \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmBool (fsmName) = CameraShake
 \----PFSM ---- SetFsmBool (variableName) = RumblingMed
 \----PFSM ---- SetFsmBool (setValue) = False
 \----PFSM ---- SetFsmBool (Name) = 
 \----PFSM ---- SetFsmBool (GameObject) = CameraParent
 \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmBool (fsmName) = CameraShake
 \----PFSM ---- SetFsmBool (variableName) = RumblingBig
 \----PFSM ---- SetFsmBool (setValue) = True
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 1.5      :: IsNone? = False
 \----PFSM StateName: Fade Out
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Remove Dreamers
 \----PFSM ---- Actions for state: Actions on Fade Out ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Fade Out ::: Wait
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = HUD Blanker White
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = FADE IN
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 2.5      :: IsNone? = False
 \----PFSM StateName: Fade In
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Get Up
 \----PFSM ---- Actions for state: Actions on Fade In ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Fade In ::: SetFsmFloat
 \----PFSM ---- Actions for state: Actions on Fade In ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on Fade In ::: Wait
 \----PFSM ---- Actions for state: Actions on Fade In ::: PlayParticleEmitter
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = DREAM AREA DISABLE
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = HUD Blanker White
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = FADE OUT
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 4.5      :: IsNone? = False
 \----PFSM ---- PlayParticleEmitter(FsmGameObject, Pt Aftermath) = None      :: IsNone? = False
 \----PFSM ---- PlayParticleEmitter(, GameObject value) = 
 \----PFSM ---- PlayParticleEmitter(, GameObject value name) = 
 \----PFSM ---- PlayParticleEmitter(String, GameObject name) = Pt Aftermath
 \----PFSM ---- PlayParticleEmitter(FsmInt, ) = 0      :: IsNone? = False
 \----PFSM StateName: Get Up
 \----PFSM ---- Transitions for state: Transition on FINISHED to state End
 \----PFSM ---- Actions for state: Actions on Get Up ::: Tk2dPlayAnimationWithEvents
 \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
 \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Prostrate Rise      :: IsNone? = False
 \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, Hero) = Knight      :: IsNone? = False
 \----PFSM StateName: End
 \----PFSM ---- Actions for state: Actions on End ::: SendMessage
 \----PFSM ---- Actions for state: Actions on End ::: SendMessage
 \----PFSM StateName: Remove Dreamers
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Fade In
 \----PFSM ---- Actions for state: Actions on Remove Dreamers ::: SetFsmBool
 \----PFSM ---- Actions for state: Actions on Remove Dreamers ::: DestroyObject
 \----PFSM ---- Actions for state: Actions on Remove Dreamers ::: DestroyObject
 \----PFSM ---- Actions for state: Actions on Remove Dreamers ::: DestroyObject
 \----PFSM ---- Actions for state: Actions on Remove Dreamers ::: Tk2dPlayAnimation
 \----PFSM ---- SetFsmBool (Name) = 
 \----PFSM ---- SetFsmBool (GameObject) = CameraParent
 \----PFSM ---- SetFsmBool (OwnerOption) = SpecifyGameObject
 \----PFSM ---- SetFsmBool (fsmName) = CameraShake
 \----PFSM ---- SetFsmBool (variableName) = RumblingBig
 \----PFSM ---- SetFsmBool (setValue) = False
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) = Prostrate
 \----PFSM StateName: Convo 2
 \----PFSM ---- Transitions for state: Transition on CONVO_FINISH to state Convo 3
 \----PFSM ---- Actions for state: Actions on Convo 2 ::: CallMethodProper
 \----PFSM ---- CallMethodProper(FsmString, ) = DialogueBox      :: IsNone? = False
 \----PFSM ---- CallMethodProper(FsmGameObject, DialogueText) = Text      :: IsNone? = False
 \----PFSM ---- CallMethodProper(FsmString, ) = StartConversation      :: IsNone? = False
 \----PFSM ---- CallMethodProper(FsmVar, ) = DREAMERS_EC1_2      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = DREAMERS_EC1_2      :::::::::::::::::::(FsmVar, ) = Dreamers      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = Dreamers      :::::::::::::::::::
 \----PFSM ---- CallMethodProper(FsmVar, ) = 0      :: IsNone? = True      :: useVariable? = True      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = 
 \----PFSM StateName: Convo 3
 \----PFSM ---- Transitions for state: Transition on CONVO_FINISH to state Convo 4
 \----PFSM ---- Actions for state: Actions on Convo 3 ::: CallMethodProper
 \----PFSM ---- CallMethodProper(FsmString, ) = DialogueBox      :: IsNone? = False
 \----PFSM ---- CallMethodProper(FsmGameObject, DialogueText) = Text      :: IsNone? = False
 \----PFSM ---- CallMethodProper(FsmString, ) = StartConversation      :: IsNone? = False
 \----PFSM ---- CallMethodProper(FsmVar, ) = DREAMERS_EC1_3      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = DREAMERS_EC1_3      :::::::::::::::::::(FsmVar, ) = Dreamers      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = Dreamers      :::::::::::::::::::
 \----PFSM ---- CallMethodProper(FsmVar, ) = 0      :: IsNone? = True      :: useVariable? = True      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = 
 \----PFSM StateName: Convo 4
 \----PFSM ---- Transitions for state: Transition on CONVO_FINISH to state Box Down
 \----PFSM ---- Actions for state: Actions on Convo 4 ::: CallMethodProper
 \----PFSM ---- CallMethodProper(FsmString, ) = DialogueBox      :: IsNone? = False
 \----PFSM ---- CallMethodProper(FsmGameObject, DialogueText) = Text      :: IsNone? = False
 \----PFSM ---- CallMethodProper(FsmString, ) = StartConversation      :: IsNone? = False
 \----PFSM ---- CallMethodProper(FsmVar, ) = DREAMERS_EC1_4      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = DREAMERS_EC1_4      :::::::::::::::::::(FsmVar, ) = Dreamers      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = Dreamers      :::::::::::::::::::
 \----PFSM ---- CallMethodProper(FsmVar, ) = 0      :: IsNone? = True      :: useVariable? = True      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = 
 \----PFSM StateName: Blast Down
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Blast Impact
 \----PFSM ---- Actions for state: Actions on Blast Down ::: FindChild
 \----PFSM ---- Actions for state: Actions on Blast Down ::: FindChild
 \----PFSM ---- Actions for state: Actions on Blast Down ::: FindChild
 \----PFSM ---- Actions for state: Actions on Blast Down ::: PlayParticleEmitter
 \----PFSM ---- Actions for state: Actions on Blast Down ::: Wait
 \----PFSM ---- Actions for state: Actions on Blast Down ::: AudioPlayerOneShotSingle
 \----PFSM ---- PlayParticleEmitter(FsmGameObject, Pt Blast 1) = None      :: IsNone? = False
 \----PFSM ---- PlayParticleEmitter(, GameObject value) = 
 \----PFSM ---- PlayParticleEmitter(, GameObject value name) = 
 \----PFSM ---- PlayParticleEmitter(String, GameObject name) = Pt Blast 1
 \----PFSM ---- PlayParticleEmitter(FsmInt, ) = 0      :: IsNone? = False
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.2      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmObject, a?.audioClip) = radiance_burst_white_stuff_move_up (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(AudioClip, a?.audioClip?.Value) = radiance_burst_white_stuff_move_up (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioPlayer?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.audioPlayer?.Value) = Audio Player Actor (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.spawnPoint?.Name) = Hero
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.spawnPoint?.Value) = Knight (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0      :: IsNone? = False
 \----PFSM StateName: Blast Impact
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Fade Out
 \----PFSM ---- Actions for state: Actions on Blast Impact ::: SpawnObjectFromGlobalPool
 \----PFSM ---- Actions for state: Actions on Blast Impact ::: PlayParticleEmitter
 \----PFSM ---- Actions for state: Actions on Blast Impact ::: Wait
 \----PFSM ---- Actions for state: Actions on Blast Impact ::: AudioPlayerOneShotSingle
 \----PFSM ---- Actions for state: Actions on Blast Impact ::: AudioPlayerOneShotSingle
 \----PFSM ---- SpawnObjectFromGlobalPool (Name) = 
 \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, ) = White Flash R      :: IsNone? = False
 \----PFSM ---- SpawnObjectFromGlobalPool(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
 \----PFSM ---- SpawnObjectFromGlobalPool(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
 \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, Hero) = Knight      :: IsNone? = False
 \----PFSM ---- SpawnObjectFromGlobalPool(FsmGameObject, ) = None      :: IsNone? = True
 \----PFSM ---- PlayParticleEmitter(FsmGameObject, Pt Blast 2) = None      :: IsNone? = False
 \----PFSM ---- PlayParticleEmitter(, GameObject value) = 
 \----PFSM ---- PlayParticleEmitter(, GameObject value name) = 
 \----PFSM ---- PlayParticleEmitter(String, GameObject name) = Pt Blast 2
 \----PFSM ---- PlayParticleEmitter(FsmInt, ) = 0      :: IsNone? = False
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.25      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmObject, a?.audioClip) = ghost_absorb_final_impact (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(AudioClip, a?.audioClip?.Value) = ghost_absorb_final_impact (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioPlayer?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.audioPlayer?.Value) = Audio Player Actor (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.spawnPoint?.Name) = Hero
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.spawnPoint?.Value) = Knight (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmObject, a?.audioClip) = boss_explode_clean (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(AudioClip, a?.audioClip?.Value) = boss_explode_clean (UnityEngine.AudioClip)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioPlayer?.Name) = 
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.audioPlayer?.Value) = Audio Player Actor (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(String, a?.spawnPoint?.Name) = Hero
 \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.spawnPoint?.Value) = Knight (UnityEngine.GameObject)
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1.15      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1.15      :: IsNone? = False
 \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0      :: IsNone? = False
 \--PFSM Active: True
 \--PFSM ActiveStateName: Idle
 \--Component: PlayMakerFixedUpdate
 \--Component: PlayMakerUnity2DProxy
Dreamer Scene 1\Init Blast
                 \--Component: Transform
                 \--GameObject activeSelf: False
                 \--GameObject layer: 11
                 \--GameObject tag: Untagged
                 \--Transform Position: (63.0, 14.3, -1.0)
                 \--Transform Rotation: (0.0, 0.0, 0.0)
                 \--Transform LocalScale: (-3.0, 3.0, 1.0)
                 \--Component: MeshFilter
                 \--Component: MeshRenderer
                 \--Component: tk2dSprite
                 \--Component: tk2dSpriteAnimator
                 \--Component: PlayMakerFSM
                 \--PFSM Name: FSM
                 \--PFSM FsmDescription: 
                 \--PFSM StateNames
                 \----PFSM StateName: Wait
                 \----PFSM ---- Transitions for state: Transition on FINISHED to state Destroy
                 \----PFSM ---- Actions for state: Actions on Wait ::: Tk2dWatchAnimationEvents
                 \----PFSM ---- Tk2dWatchAnimationEvents(FsmGameObject, ) = None      :: IsNone? = False
                 \----PFSM ---- Tk2dWatchAnimationEvents(, GameObject value) = 
                 \----PFSM ---- Tk2dWatchAnimationEvents(, GameObject value name) = 
                 \----PFSM ---- Tk2dWatchAnimationEvents(String, GameObject name) = 
                 \----PFSM ---- Tk2dWatchAnimationEvents(FsmEvent, FINISHED) = HutongGames.PlayMaker.FsmEvent      :: IsGlobal? = False
                 \----PFSM ---- Tk2dWatchAnimationEvents(, ) =       :: IsGlobal? = 
                 \----PFSM StateName: Destroy
                 \----PFSM ---- Actions for state: Actions on Destroy ::: DestroySelf
                 \----PFSM StateName: Pause
                 \----PFSM ---- Transitions for state: Transition on FINISHED to state Wait
                 \----PFSM ---- Actions for state: Actions on Pause ::: NextFrameEvent
                 \----PFSM ---- NextFrameEvent(String, sendEvent) = FINISHED
                 \--PFSM Active: False
                 \--PFSM ActiveStateName: 
Dreamer Scene 1\Init Blast\Attack Pt
                            \--Component: Transform
                            \--GameObject activeSelf: True
                            \--GameObject layer: 16
                            \--GameObject tag: Untagged
                            \--Transform Position: (63.0, 14.3, -1.0)
                            \--Transform Rotation: (0.0, 0.0, 0.0)
                            \--Transform LocalScale: (-0.3, 0.3, 1.0)
                            \--Component: ParticleSystem
                            \--Component: ParticleSystemRenderer
Dreamer Scene 1\Init Blast\White Flash
                            \--Component: Transform
                            \--GameObject activeSelf: True
                            \--GameObject layer: 0
                            \--GameObject tag: Untagged
                            \--Transform Position: (63.0, 14.3, -0.9)
                            \--Transform Rotation: (0.0, 0.0, 0.0)
                            \--Transform LocalScale: (-3.9, 3.9, 11.6)
                            \--Component: SpriteRenderer
                            \--Component: PlayMakerFSM
                            \--PFSM Name: fade and destroy
                            \--PFSM FsmDescription: 
                            \--PFSM StateNames
                            \----PFSM StateName: Idle
                            \----PFSM ---- Transitions for state: Transition on FINISHED to state Destroy
                            \----PFSM ---- Actions for state: Actions on Idle ::: EaseColor
                            \----PFSM ---- Actions for state: Actions on Idle ::: SetMaterialColor
                            \----PFSM StateName: Destroy
                            \----PFSM ---- Actions for state: Actions on Destroy ::: DestroySelf
                            \----PFSM ---- Actions for state: Actions on Destroy ::: ActivateGameObject
                            \----PFSM ---- ActivateGameObject (Name) = 
                            \----PFSM ---- ActivateGameObject (GameObject) = None
                            \----PFSM ---- ActivateGameObject (OwnerOption) = UseOwner
                            \----PFSM ---- ActivateGameObject (activate) = False
                            \--PFSM Active: False
                            \--PFSM ActiveStateName: 
Dreamer Scene 1\Summon Pt
                 \--Component: Transform
                 \--GameObject activeSelf: True
                 \--GameObject layer: 16
                 \--GameObject tag: Untagged
                 \--Transform Position: (56.0, 7.3, 0.0)
                 \--Transform Rotation: (0.0, 0.0, 0.0)
                 \--Transform LocalScale: (1.0, 1.0, 1.0)
                 \--Component: ParticleSystem
                 \--Component: ParticleSystemRenderer
                 \--Component: KeepWorldScalePositive
Dreamer Scene 1\Knight Lift
                 \--Component: Transform
                 \--GameObject activeSelf: False
                 \--GameObject layer: 13
                 \--GameObject tag: Untagged
                 \--Transform Position: (0.0, 0.0, 0.0)
                 \--Transform Rotation: (0.0, 0.0, 0.0)
                 \--Transform LocalScale: (-1.0, 1.0, 1.0)
                 \--Component: MeshFilter
                 \--Component: MeshRenderer
                 \--Component: tk2dSprite
                 \--Component: tk2dSpriteAnimator
                 \--Component: PlayMakerFSM
                 \--PFSM Name: Lift
                 \--PFSM FsmDescription: 
                 \--PFSM StateNames
                 \----PFSM StateName: Tween
                 \----PFSM ---- Actions for state: Actions on Tween ::: iTweenMoveBy
                 \--PFSM Active: False
                 \--PFSM ActiveStateName: 
Dreamer Scene 1\Pt Blast 1
                 \--Component: Transform
                 \--GameObject activeSelf: True
                 \--GameObject layer: 16
                 \--GameObject tag: Untagged
                 \--Transform Position: (27.2, 45.4, 0.0)
                 \--Transform Rotation: (0.0, 0.0, 0.0)
                 \--Transform LocalScale: (1.0, 1.0, 1.0)
                 \--Component: ParticleSystem
                 \--Component: ParticleSystemRenderer
Dreamer Scene 1\Pt Blast 2
                 \--Component: Transform
                 \--GameObject activeSelf: True
                 \--GameObject layer: 16
                 \--GameObject tag: Untagged
                 \--Transform Position: (27.1, 26.5, 0.0)
                 \--Transform Rotation: (0.0, 0.0, 0.0)
                 \--Transform LocalScale: (1.0, 1.0, 1.0)
                 \--Component: ParticleSystem
                 \--Component: ParticleSystemRenderer
Dreamer Scene 1\Pt Aftermath
                 \--Component: Transform
                 \--GameObject activeSelf: True
                 \--GameObject layer: 16
                 \--GameObject tag: Untagged
                 \--Transform Position: (27.1, 26.8, 0.0)
                 \--Transform Rotation: (0.0, 0.0, 0.0)
                 \--Transform LocalScale: (1.0, 1.0, 1.0)
                 \--Component: ParticleSystem
                 \--Component: ParticleSystemRenderer
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Hornet Saver
Hornet Saver
 \--Component: Transform
 \--GameObject activeSelf: True
 \--GameObject layer: 8
 \--GameObject tag: Untagged
 \--Transform Position: (0.0, 0.0, 0.0)
 \--Transform Rotation: (0.0, 0.0, 0.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
Hornet Saver\Colliders
              \--Component: Transform
              \--GameObject activeSelf: False
              \--GameObject layer: 8
              \--GameObject tag: Untagged
              \--Transform Position: (0.0, 0.0, 0.0)
              \--Transform Rotation: (0.0, 0.0, 0.0)
              \--Transform LocalScale: (1.0, 1.0, 1.0)
              \--Component: BoxCollider2D
              \--BoxCollider2D Size: (8.0, 20.0)
              \--BoxCollider2D Offset: (11.0, 35.0)
              \--BoxCollider2D Bounds-Min: (0.0, 0.0, 0.0)
              \--BoxCollider2D Bounds-Max: (0.0, 0.0, 0.0)
              \--BoxCollider2D isTrigger: False
              \--Component: BoxCollider2D
              \--BoxCollider2D Size: (8.0, 20.0)
              \--BoxCollider2D Offset: (42.0, 35.0)
              \--BoxCollider2D Bounds-Min: (0.0, 0.0, 0.0)
              \--BoxCollider2D Bounds-Max: (0.0, 0.0, 0.0)
              \--BoxCollider2D isTrigger: False
              \--Component: BoxCollider2D
              \--BoxCollider2D Size: (27.6, 20.0)
              \--BoxCollider2D Offset: (26.4, 17.0)
              \--BoxCollider2D Bounds-Min: (0.0, 0.0, 0.0)
              \--BoxCollider2D Bounds-Max: (0.0, 0.0, 0.0)
              \--BoxCollider2D isTrigger: False
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Music Region
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Dream Scene Activate
Dream Scene Activate
 \--Component: Transform
 \--GameObject activeSelf: True
 \--GameObject layer: 13
 \--GameObject tag: Untagged
 \--Transform Position: (0.0, 0.0, 0.0)
 \--Transform Rotation: (0.0, 0.0, 0.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
 \--Component: PlayMakerFSM
 \--PFSM Name: Control
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Pause
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Check
 \----PFSM ---- Actions for state: Actions on Pause ::: NextFrameEvent
 \----PFSM ---- NextFrameEvent(String, sendEvent) = FINISHED
 \----PFSM StateName: Check
 \----PFSM ---- Transitions for state: Transition on INERT to state Inert
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Init
 \----PFSM ---- Actions for state: Actions on Check ::: PlayerDataBoolTest
 \----PFSM ---- Actions for state: Actions on Check ::: PlayerDataBoolTest
 \----PFSM ---- PlayerDataBoolTest (boolName) = dreamerScene1
 \----PFSM ---- PlayerDataBoolTest (bool.Value) = False
 \----PFSM ---- PlayerDataBoolTest (boolName) = hasDash
 \----PFSM ---- PlayerDataBoolTest (bool.Value) = False
 \----PFSM StateName: Inert
 \----PFSM StateName: Init
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Idle
 \----PFSM ---- Actions for state: Actions on Init ::: FindGameObject
 \----PFSM ---- Actions for state: Actions on Init ::: FindGameObject
 \----PFSM ---- Actions for state: Actions on Init ::: FindGameObject
 \----PFSM StateName: Idle
 \----PFSM ---- Transitions for state: Transition on ENTER to state Activate
 \----PFSM ---- Actions for state: Actions on Idle ::: Trigger2dEvent
 \----PFSM StateName: Activate
 \----PFSM ---- Transitions for state: Transition on CANCEL to state Idle
 \----PFSM ---- Actions for state: Actions on Activate ::: PlayerDataBoolTest
 \----PFSM ---- Actions for state: Actions on Activate ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Activate ::: SetCollider
 \----PFSM ---- Actions for state: Actions on Activate ::: SendEventByName
 \----PFSM ---- PlayerDataBoolTest (boolName) = hasDash
 \----PFSM ---- PlayerDataBoolTest (bool.Value) = False
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Hornet Saver
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM ---- SetCollider (Name) = 
 \----PFSM ---- SetCollider (gameObject?.GameObject?.Name) = Dreamer Scene 1
 \----PFSM ---- SetCollider (active) = True
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Battle Gate A
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = BG OPEN
 \--PFSM Active: True
 \--PFSM ActiveStateName: Idle
 \--Component: BoxCollider2D
 \--BoxCollider2D Size: (13.4, 23.5)
 \--BoxCollider2D Offset: (37.0, 36.7)
 \--BoxCollider2D Bounds-Min: (30.2, 24.9, 0.0)
 \--BoxCollider2D Bounds-Max: (43.7, 48.4, 0.0)
 \--BoxCollider2D isTrigger: True
 \--Component: PlayMakerUnity2DProxy
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Cutscene Dreamer
Cutscene Dreamer
 \--Component: Transform
 \--GameObject activeSelf: True
 \--GameObject layer: 0
 \--GameObject tag: Untagged
 \--Transform Position: (18.9, 34.3, 0.0)
 \--Transform Rotation: (0.0, 0.0, 0.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
 \--Component: PlayMakerFSM
 \--PFSM Name: Control
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Init
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Off
 \----PFSM ---- Actions for state: Actions on Init ::: FindChild
 \----PFSM ---- Actions for state: Actions on Init ::: BuildString
 \----PFSM ---- Actions for state: Actions on Init ::: BuildString
 \----PFSM ---- BuildString (Name) = 
 \----PFSM ---- BuildString (addToEnd) = True
 \----PFSM ---- BuildString (addToEnd?.Name) = 
 \----PFSM ---- BuildString (everyFrame) = False
 \----PFSM ---- BuildString (separator) = 
 \----PFSM ---- BuildString (separator?.Name) = 
 \----PFSM ---- BuildString (storeResult) =  Idle
 \----PFSM ---- BuildString(String, stringParts) = 
 \----PFSM ---- BuildString(String, stringParts Name) = Name
 \----PFSM ---- BuildString(String, stringParts) =  Idle
 \----PFSM ---- BuildString(String, stringParts Name) = 
 \----PFSM ---- BuildString (Name) = 
 \----PFSM ---- BuildString (addToEnd) = True
 \----PFSM ---- BuildString (addToEnd?.Name) = 
 \----PFSM ---- BuildString (everyFrame) = False
 \----PFSM ---- BuildString (separator) = 
 \----PFSM ---- BuildString (separator?.Name) = 
 \----PFSM ---- BuildString (storeResult) =  Cast
 \----PFSM ---- BuildString(String, stringParts) = 
 \----PFSM ---- BuildString(String, stringParts Name) = Name
 \----PFSM ---- BuildString(String, stringParts) =  Cast
 \----PFSM ---- BuildString(String, stringParts Name) = 
 \----PFSM StateName: Off
 \----PFSM ---- Actions for state: Actions on Off ::: SetSpriteRenderer
 \----PFSM ---- Actions for state: Actions on Off ::: StopParticleEmitter
 \----PFSM ---- Actions for state: Actions on Off ::: StopParticleEmitter
 \----PFSM ---- Actions for state: Actions on Off ::: StopParticleEmitter
 \----PFSM StateName: Orb
 \----PFSM ---- Actions for state: Actions on Orb ::: SetMeshRenderer
 \----PFSM ---- Actions for state: Actions on Orb ::: StopParticleEmitter
 \----PFSM ---- Actions for state: Actions on Orb ::: PlayParticleEmitter
 \----PFSM ---- Actions for state: Actions on Orb ::: PlayParticleEmitter
 \----PFSM ---- SetMeshRenderer (Name) = 
 \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Sprite
 \----PFSM ---- SetMeshRenderer (active) = False
 \----PFSM ---- PlayParticleEmitter(FsmGameObject, Orb Pt) = Orb Pt      :: IsNone? = False
 \----PFSM ---- PlayParticleEmitter(GameObject, GameObject value) = Orb Pt (UnityEngine.GameObject)
 \----PFSM ---- PlayParticleEmitter(String, GameObject value name) = Orb Pt
 \----PFSM ---- PlayParticleEmitter(String, GameObject name) = Orb Pt
 \----PFSM ---- PlayParticleEmitter(FsmInt, ) = 0      :: IsNone? = False
 \----PFSM ---- PlayParticleEmitter(FsmGameObject, Trail Pt) = Trail Pt      :: IsNone? = False
 \----PFSM ---- PlayParticleEmitter(GameObject, GameObject value) = Trail Pt (UnityEngine.GameObject)
 \----PFSM ---- PlayParticleEmitter(String, GameObject value name) = Trail Pt
 \----PFSM ---- PlayParticleEmitter(String, GameObject name) = Trail Pt
 \----PFSM ---- PlayParticleEmitter(FsmInt, ) = 0      :: IsNone? = False
 \----PFSM StateName: To Orb
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Orb
 \----PFSM ---- Actions for state: Actions on To Orb ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on To Orb ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on To Orb ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on To Orb ::: PlayParticleEmitter
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = AverageShake
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = White Flash
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Blast
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- PlayParticleEmitter(FsmGameObject, Burst Pt) = Burst Pt      :: IsNone? = False
 \----PFSM ---- PlayParticleEmitter(GameObject, GameObject value) = Burst Pt (UnityEngine.GameObject)
 \----PFSM ---- PlayParticleEmitter(String, GameObject value name) = Burst Pt
 \----PFSM ---- PlayParticleEmitter(String, GameObject name) = Burst Pt
 \----PFSM ---- PlayParticleEmitter(FsmInt, ) = 0      :: IsNone? = False
 \----PFSM StateName: To Form
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Form
 \----PFSM ---- Actions for state: Actions on To Form ::: SendEventByName
 \----PFSM ---- Actions for state: Actions on To Form ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on To Form ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on To Form ::: PlayParticleEmitter
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = AverageShake
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = White Flash
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Blast
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM ---- PlayParticleEmitter(FsmGameObject, Burst Pt) = Burst Pt      :: IsNone? = False
 \----PFSM ---- PlayParticleEmitter(GameObject, GameObject value) = Burst Pt (UnityEngine.GameObject)
 \----PFSM ---- PlayParticleEmitter(String, GameObject value name) = Burst Pt
 \----PFSM ---- PlayParticleEmitter(String, GameObject name) = Burst Pt
 \----PFSM ---- PlayParticleEmitter(FsmInt, ) = 0      :: IsNone? = False
 \----PFSM StateName: Form
 \----PFSM ---- Transitions for state: Transition on CAST to state Cast
 \----PFSM ---- Actions for state: Actions on Form ::: SetMeshRenderer
 \----PFSM ---- Actions for state: Actions on Form ::: PlayParticleEmitter
 \----PFSM ---- Actions for state: Actions on Form ::: StopParticleEmitter
 \----PFSM ---- Actions for state: Actions on Form ::: StopParticleEmitter
 \----PFSM ---- Actions for state: Actions on Form ::: Tk2dPlayAnimation
 \----PFSM ---- SetMeshRenderer (Name) = 
 \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Sprite
 \----PFSM ---- SetMeshRenderer (active) = True
 \----PFSM ---- PlayParticleEmitter(FsmGameObject, Idle Pt) = Idle Pt      :: IsNone? = False
 \----PFSM ---- PlayParticleEmitter(GameObject, GameObject value) = Idle Pt (UnityEngine.GameObject)
 \----PFSM ---- PlayParticleEmitter(String, GameObject value name) = Idle Pt
 \----PFSM ---- PlayParticleEmitter(String, GameObject name) = Idle Pt
 \----PFSM ---- PlayParticleEmitter(FsmInt, ) = 0      :: IsNone? = False
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) =  Idle
 \----PFSM StateName: Cast
 \----PFSM ---- Transitions for state: Transition on IDLE to state Idle
 \----PFSM ---- Actions for state: Actions on Cast ::: Tk2dPlayAnimation
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) =  Cast
 \----PFSM StateName: Idle
 \----PFSM ---- Transitions for state: Transition on CAST to state Cast
 \----PFSM ---- Actions for state: Actions on Idle ::: Tk2dPlayAnimation
 \----PFSM ---- Tk2dPlayAnimation (Name) = 
 \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
 \----PFSM ---- Tk2dPlayAnimation (clipName) =  Idle
 \--PFSM Active: True
 \--PFSM ActiveStateName: Off
Cutscene Dreamer\Burst Pt
                  \--Component: Transform
                  \--GameObject activeSelf: True
                  \--GameObject layer: 16
                  \--GameObject tag: Untagged
                  \--Transform Position: (18.9, 34.3, 0.0)
                  \--Transform Rotation: (0.0, 0.0, 0.0)
                  \--Transform LocalScale: (1.0, 1.0, 1.0)
                  \--Component: ParticleSystem
                  \--Component: ParticleSystemRenderer
Cutscene Dreamer\White Flash
                  \--Component: Transform
                  \--GameObject activeSelf: False
                  \--GameObject layer: 0
                  \--GameObject tag: Untagged
                  \--Transform Position: (18.9, 34.3, 0.0)
                  \--Transform Rotation: (0.0, 0.0, 0.0)
                  \--Transform LocalScale: (11.6, 11.6, 11.6)
                  \--Component: SpriteRenderer
                  \--Component: SimpleSpriteFade
Cutscene Dreamer\Orb Pt
                  \--Component: Transform
                  \--GameObject activeSelf: True
                  \--GameObject layer: 16
                  \--GameObject tag: Untagged
                  \--Transform Position: (18.9, 34.3, 0.0)
                  \--Transform Rotation: (0.0, 0.0, 0.0)
                  \--Transform LocalScale: (1.0, 1.0, 1.0)
                  \--Component: ParticleSystem
                  \--Component: ParticleSystemRenderer
Cutscene Dreamer\Trail Pt
                  \--Component: Transform
                  \--GameObject activeSelf: True
                  \--GameObject layer: 16
                  \--GameObject tag: Untagged
                  \--Transform Position: (18.9, 34.3, 0.0)
                  \--Transform Rotation: (0.0, 0.0, 0.0)
                  \--Transform LocalScale: (1.0, 1.0, 1.0)
                  \--Component: ParticleSystem
                  \--Component: ParticleSystemRenderer
Cutscene Dreamer\Sprite
                  \--Component: Transform
                  \--GameObject activeSelf: True
                  \--GameObject layer: 0
                  \--GameObject tag: Untagged
                  \--Transform Position: (18.9, 34.5, 0.0)
                  \--Transform Rotation: (0.0, 0.0, 0.0)
                  \--Transform LocalScale: (1.6, 1.6, 1.6)
                  \--Component: MeshFilter
                  \--Component: MeshRenderer
                  \--Component: tk2dSprite
                  \--Component: tk2dSpriteAnimator
                  \--Component: PlayMakerFSM
                  \--PFSM Name: Bob
                  \--PFSM FsmDescription: 
                  \--PFSM StateNames
                  \----PFSM StateName: State 1
                  \----PFSM ---- Actions for state: Actions on State 1 ::: iTweenMoveBy
                  \----PFSM StateName: Get
                  \--PFSM Active: True
                  \--PFSM ActiveStateName: State 1
                  \--Component: iTweenFSMEvents
                  \--Component: iTween
Cutscene Dreamer\Sprite\Idle Pt
                         \--Component: Transform
                         \--GameObject activeSelf: True
                         \--GameObject layer: 16
                         \--GameObject tag: Untagged
                         \--Transform Position: (18.9, 34.1, 0.0)
                         \--Transform Rotation: (0.0, 0.0, 0.0)
                         \--Transform LocalScale: (1.0, 2.3, 1.0)
                         \--Component: ParticleSystem
                         \--Component: ParticleSystemRenderer
Cutscene Dreamer\Blast
                  \--Component: Transform
                  \--GameObject activeSelf: False
                  \--GameObject layer: 11
                  \--GameObject tag: Untagged
                  \--Transform Position: (18.9, 34.3, 0.0)
                  \--Transform Rotation: (0.0, 0.0, 0.0)
                  \--Transform LocalScale: (-3.0, 3.0, 1.0)
                  \--Component: MeshFilter
                  \--Component: MeshRenderer
                  \--Component: tk2dSprite
                  \--Component: tk2dSpriteAnimator
                  \--Component: PlayMakerFSM
                  \--PFSM Name: FSM
                  \--PFSM FsmDescription: 
                  \--PFSM StateNames
                  \----PFSM StateName: Wait
                  \----PFSM ---- Transitions for state: Transition on FINISHED to state Reparent?
                  \----PFSM ---- Actions for state: Actions on Wait ::: Tk2dPlayFrame
                  \----PFSM ---- Actions for state: Actions on Wait ::: Tk2dWatchAnimationEvents
                  \----PFSM ---- Tk2dPlayFrame(FsmGameObject, ) = None      :: IsNone? = False
                  \----PFSM ---- Tk2dPlayFrame(, GameObject value) = 
                  \----PFSM ---- Tk2dPlayFrame(, GameObject value name) = 
                  \----PFSM ---- Tk2dPlayFrame(String, GameObject name) = 
                  \----PFSM ---- Tk2dPlayFrame(FsmInt, ) = 0      :: IsNone? = False
                  \----PFSM ---- Tk2dWatchAnimationEvents(FsmGameObject, Self) = None      :: IsNone? = False
                  \----PFSM ---- Tk2dWatchAnimationEvents(, GameObject value) = 
                  \----PFSM ---- Tk2dWatchAnimationEvents(, GameObject value name) = 
                  \----PFSM ---- Tk2dWatchAnimationEvents(String, GameObject name) = Self
                  \----PFSM ---- Tk2dWatchAnimationEvents(FsmEvent, FINISHED) = HutongGames.PlayMaker.FsmEvent      :: IsGlobal? = False
                  \----PFSM ---- Tk2dWatchAnimationEvents(, ) =       :: IsGlobal? = 
                  \----PFSM StateName: Destroy
                  \----PFSM ---- Actions for state: Actions on Destroy ::: ActivateGameObject
                  \----PFSM ---- ActivateGameObject (Name) = 
                  \----PFSM ---- ActivateGameObject (GameObject) = None
                  \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
                  \----PFSM ---- ActivateGameObject (activate) = False
                  \----PFSM StateName: Reposition?
                  \----PFSM ---- Transitions for state: Transition on FINISHED to state Set Rotation?
                  \----PFSM ---- Actions for state: Actions on Reposition? ::: SetMeshRenderer
                  \----PFSM ---- Actions for state: Actions on Reposition? ::: BoolTest
                  \----PFSM ---- Actions for state: Actions on Reposition? ::: SetPosition
                  \----PFSM ---- SetMeshRenderer (Name) = 
                  \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Self
                  \----PFSM ---- SetMeshRenderer (active) = True
                  \----PFSM ---- BoolTest (Name) = 
                  \----PFSM ---- BoolTest (boolVariable) = True
                  \----PFSM ---- BoolTest (boolVariable?.Name) = Reposition
                  \----PFSM ---- BoolTest (isFalse) = FINISHED
                  \----PFSM ---- BoolTest (isTrue) = 
                  \----PFSM ---- SetPosition (Name) = 
                  \----PFSM ---- SetPosition (GameObject) = None
                  \----PFSM ---- SetPosition (GameObject Name) = Self
                  \----PFSM ---- SetPosition (OwnerOption) = SpecifyGameObject
                  \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
                  \----PFSM ---- SetPosition (vector Name) = Init Pos
                  \----PFSM ---- SetPosition (everyFrame) = False
                  \----PFSM ---- SetPosition (space) = Self
                  \----PFSM ---- SetPosition (lateUpdate) = False
                  \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
                  \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
                  \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
                  \----PFSM ---- SetPosition(FsmVector3, Init Pos) = (0.0, 0.0, 0.0)      :: IsNone? = False
                  \----PFSM StateName: Init
                  \----PFSM ---- Transitions for state: Transition on FINISHED to state Pause?
                  \----PFSM ---- Actions for state: Actions on Init ::: GetOwner
                  \----PFSM ---- Actions for state: Actions on Init ::: GetParent
                  \----PFSM ---- Actions for state: Actions on Init ::: ActivateAllChildren
                  \----PFSM StateName: Unparent?
                  \----PFSM ---- Transitions for state: Transition on FINISHED to state Wait
                  \----PFSM ---- Actions for state: Actions on Unparent? ::: BoolTest
                  \----PFSM ---- Actions for state: Actions on Unparent? ::: GetScale
                  \----PFSM ---- Actions for state: Actions on Unparent? ::: GetScale
                  \----PFSM ---- Actions for state: Actions on Unparent? ::: SetParent
                  \----PFSM ---- Actions for state: Actions on Unparent? ::: SetScale
                  \----PFSM ---- Actions for state: Actions on Unparent? ::: BoolTest
                  \----PFSM ---- Actions for state: Actions on Unparent? ::: SetScale
                  \----PFSM ---- BoolTest (Name) = 
                  \----PFSM ---- BoolTest (boolVariable) = True
                  \----PFSM ---- BoolTest (boolVariable?.Name) = Unparent
                  \----PFSM ---- BoolTest (isFalse) = FINISHED
                  \----PFSM ---- BoolTest (isTrue) = 
                  \----PFSM ---- GetScale(Boolean, everyFrame) = False
                  \----PFSM ---- GetScale(FsmGameObject, Self) = None      :: IsNone? = False
                  \----PFSM ---- GetScale(Space, space) = Self
                  \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
                  \----PFSM ---- GetScale(FsmFloat, X Scale) = 0      :: IsNone? = False
                  \----PFSM ---- GetScale(FsmFloat, Y Scale) = 0      :: IsNone? = False
                  \----PFSM ---- GetScale(FsmFloat, ) = 0      :: IsNone? = True
                  \----PFSM ---- GetScale(Boolean, everyFrame) = False
                  \----PFSM ---- GetScale(FsmGameObject, Self) = None      :: IsNone? = False
                  \----PFSM ---- GetScale(Space, space) = World
                  \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
                  \----PFSM ---- GetScale(FsmFloat, World X Scale) = 0      :: IsNone? = False
                  \----PFSM ---- GetScale(FsmFloat, World Y Scale) = 0      :: IsNone? = False
                  \----PFSM ---- GetScale(FsmFloat, ) = 0      :: IsNone? = True
                  \----PFSM ---- SetParent(FsmGameObject, Self) = None      :: IsNone? = False
                  \----PFSM ---- SetParent(, GameObject value) = 
                  \----PFSM ---- SetParent(, GameObject value name) = 
                  \----PFSM ---- SetParent(String, GameObject name) = Self
                  \----PFSM ---- SetParent(FsmGameObject, ) = None      :: IsNone? = False
                  \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
                  \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
                  \----PFSM ---- SetScale (Name) = 
                  \----PFSM ---- SetScale (GameObject) = None
                  \----PFSM ---- SetScale (GameObject Name) = Self
                  \----PFSM ---- SetScale (GameObject V) = 
                  \----PFSM ---- SetScale (GameObject VName) = 
                  \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
                  \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
                  \----PFSM ---- SetScale (vector Name) = 
                  \----PFSM ---- SetScale (everyFrame) = False
                  \----PFSM ---- SetScale (lateUpdate) = False
                  \----PFSM ---- SetScale (x) = 0
                  \----PFSM ---- SetScale (x Name) = World X Scale
                  \----PFSM ---- SetScale (y) = 0
                  \----PFSM ---- SetScale (y Name) = World Y Scale
                  \----PFSM ---- SetScale (z) = 0
                  \----PFSM ---- SetScale (z Name) = 
                  \----PFSM ---- BoolTest (Name) = 
                  \----PFSM ---- BoolTest (boolVariable) = False
                  \----PFSM ---- BoolTest (boolVariable?.Name) = Reset Scale
                  \----PFSM ---- BoolTest (isFalse) = FINISHED
                  \----PFSM ---- BoolTest (isTrue) = 
                  \----PFSM ---- SetScale (Name) = 
                  \----PFSM ---- SetScale (GameObject) = None
                  \----PFSM ---- SetScale (GameObject Name) = 
                  \----PFSM ---- SetScale (GameObject V) = 
                  \----PFSM ---- SetScale (GameObject VName) = 
                  \----PFSM ---- SetScale (OwnerOption) = UseOwner
                  \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
                  \----PFSM ---- SetScale (vector Name) = Scale
                  \----PFSM ---- SetScale (everyFrame) = False
                  \----PFSM ---- SetScale (lateUpdate) = False
                  \----PFSM ---- SetScale (x) = 0
                  \----PFSM ---- SetScale (x Name) = 
                  \----PFSM ---- SetScale (y) = 0
                  \----PFSM ---- SetScale (y Name) = 
                  \----PFSM ---- SetScale (z) = 0
                  \----PFSM ---- SetScale (z Name) = 
                  \----PFSM StateName: Reparent?
                  \----PFSM ---- Transitions for state: Transition on FINISHED to state Destroy
                  \----PFSM ---- Actions for state: Actions on Reparent? ::: BoolTest
                  \----PFSM ---- Actions for state: Actions on Reparent? ::: SetParent
                  \----PFSM ---- Actions for state: Actions on Reparent? ::: SetScale
                  \----PFSM ---- BoolTest (Name) = 
                  \----PFSM ---- BoolTest (boolVariable) = True
                  \----PFSM ---- BoolTest (boolVariable?.Name) = Unparent
                  \----PFSM ---- BoolTest (isFalse) = FINISHED
                  \----PFSM ---- BoolTest (isTrue) = 
                  \----PFSM ---- SetParent(FsmGameObject, Self) = None      :: IsNone? = False
                  \----PFSM ---- SetParent(, GameObject value) = 
                  \----PFSM ---- SetParent(, GameObject value name) = 
                  \----PFSM ---- SetParent(String, GameObject name) = Self
                  \----PFSM ---- SetParent(FsmGameObject, Parent) = None      :: IsNone? = False
                  \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
                  \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
                  \----PFSM ---- SetScale (Name) = 
                  \----PFSM ---- SetScale (GameObject) = None
                  \----PFSM ---- SetScale (GameObject Name) = Self
                  \----PFSM ---- SetScale (GameObject V) = 
                  \----PFSM ---- SetScale (GameObject VName) = 
                  \----PFSM ---- SetScale (OwnerOption) = SpecifyGameObject
                  \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
                  \----PFSM ---- SetScale (vector Name) = 
                  \----PFSM ---- SetScale (everyFrame) = False
                  \----PFSM ---- SetScale (lateUpdate) = False
                  \----PFSM ---- SetScale (x) = 0
                  \----PFSM ---- SetScale (x Name) = X Scale
                  \----PFSM ---- SetScale (y) = 0
                  \----PFSM ---- SetScale (y Name) = Y Scale
                  \----PFSM ---- SetScale (z) = 0
                  \----PFSM ---- SetScale (z Name) = 
                  \----PFSM StateName: Pause?
                  \----PFSM ---- Transitions for state: Transition on FINISHED to state Reposition?
                  \----PFSM ---- Actions for state: Actions on Pause? ::: FloatCompare
                  \----PFSM ---- Actions for state: Actions on Pause? ::: SetMeshRenderer
                  \----PFSM ---- Actions for state: Actions on Pause? ::: Wait
                  \----PFSM ---- FloatCompare (Name) = 
                  \----PFSM ---- FloatCompare (float1) = 0
                  \----PFSM ---- FloatCompare (float2) = 0
                  \----PFSM ---- FloatCompare (float1 Name) = Pause
                  \----PFSM ---- FloatCompare (float2 Name) = 
                  \----PFSM ---- FloatCompare (greaterThan) = 
                  \----PFSM ---- FloatCompare (lessThan) = FINISHED
                  \----PFSM ---- FloatCompare (equal) = FINISHED
                  \----PFSM ---- FloatCompare (everyFrame) = False
                  \----PFSM ---- SetMeshRenderer (Name) = 
                  \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Self
                  \----PFSM ---- SetMeshRenderer (active) = False
                  \----PFSM ---- Wait(String, finishEvent) = FINISHED
                  \----PFSM ---- Wait(Boolean, realTime) = False
                  \----PFSM ---- Wait(FsmFloat, Pause) = 0      :: IsNone? = False
                  \----PFSM StateName: Set Rotation?
                  \----PFSM ---- Transitions for state: Transition on FINISHED to state Unparent?
                  \----PFSM ---- Actions for state: Actions on Set Rotation? ::: BoolTest
                  \----PFSM ---- Actions for state: Actions on Set Rotation? ::: SetRotation
                  \----PFSM ---- BoolTest (Name) = 
                  \----PFSM ---- BoolTest (boolVariable) = False
                  \----PFSM ---- BoolTest (boolVariable?.Name) = Reset Rotation
                  \----PFSM ---- BoolTest (isFalse) = FINISHED
                  \----PFSM ---- BoolTest (isTrue) = 
                  \----PFSM ---- SetRotation (Name) = 
                  \----PFSM ---- SetRotation (GameObject) = None
                  \----PFSM ---- SetRotation (GameObject Name) = 
                  \----PFSM ---- SetRotation (OwnerOption) = UseOwner
                  \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
                  \----PFSM ---- SetRotation (vector name) = 
                  \----PFSM ---- SetRotation (everyFrame) = False
                  \----PFSM ---- SetRotation (lateUpdate) = False
                  \----PFSM ---- SetRotation (space) = Self
                  \----PFSM ---- SetRotation (xAngle) = 0
                  \----PFSM ---- SetRotation (yAngle) = 0
                  \----PFSM ---- SetRotation (zAngle) = 0
                  \----PFSM ---- SetRotation (xAngle name) = 
                  \----PFSM ---- SetRotation (yAngle name) = 
                  \----PFSM ---- SetRotation (zAngle name) = Rotation
                  \--PFSM Active: False
                  \--PFSM ActiveStateName: 
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Hornet Boss 1
Hornet Boss 1
 \--Component: Transform
 \--GameObject activeSelf: True
 \--GameObject layer: 11
 \--GameObject tag: Untagged
 \--Transform Position: (19.6, 28.6, 0.0)
 \--Transform Rotation: (0.0, 0.0, 0.0)
 \--Transform LocalScale: (-1.0, 1.0, 1.0)
 \--Component: MeshFilter
 \--Component: MeshRenderer
 \--Component: tk2dSprite
 \--Component: tk2dSpriteAnimator
 \--Component: Rigidbody2D
 \--PrintRigidbody2D mass: 1
 \--PrintRigidbody2D velocity: (0.0, 0.0)
 \--PrintRigidbody2D drag: 0
 \--PrintRigidbody2D angularVelocity: 0
 \--PrintRigidbody2D angularDrag: 0.05
 \--PrintRigidbody2D gravityScale: 1.5
 \--PrintRigidbody2D isKinematic: True
 \--PrintRigidbody2D interpolation: Extrapolate
 \--PrintRigidbody2D freezeRotation: True
 \--PrintRigidbody2D collisionDetectionMode: Continuous
 \--Component: BoxCollider2D
 \--BoxCollider2D Size: (0.9, 2.6)
 \--BoxCollider2D Offset: (0.1, -0.3)
 \--BoxCollider2D Bounds-Min: (19.6, 28.6, 0.0)
 \--BoxCollider2D Bounds-Max: (19.6, 28.6, 0.0)
 \--BoxCollider2D isTrigger: False
 \--Component: SpriteFlash
 \--Component: SetZ
 \--Component: AudioSource
 \--Component: DamageHero
 \--Component: ExtraDamageable
 \--Component: HealthManager
 \--Component: EnemyDeathEffectsUninfected
 \--Component: EnemyHitEffectsUninfected
 \--Component: EnemyDreamnailReaction
 \--Component: Recoil
 \--Component: ConstrainPosition
 \--Component: HornetBoss
 \--Component: PreventOutOfBounds
 \--Component: StunController
Hornet Boss 1\Hit GDash
               \--Component: Transform
               \--GameObject activeSelf: False
               \--GameObject layer: 22
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: PolygonCollider2D
               \--PolygonCollider2D points: (-0.3, -0.7)
               \--PolygonCollider2D points: (-0.4, -0.9)
               \--PolygonCollider2D points: (-2.1, -0.9)
               \--PolygonCollider2D Offset: (0.2, 0.3)
               \--PolygonCollider2D Bounds-Min: (19.6, 28.6, 0.0)
               \--PolygonCollider2D Bounds-Max: (19.6, 28.6, 0.0)
               \--PolygonCollider2D isTrigger: True
               \--Component: NonBouncer
               \--Component: DamageHero
Hornet Boss 1\Hit ADash
               \--Component: Transform
               \--GameObject activeSelf: False
               \--GameObject layer: 22
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 29.1, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: PolygonCollider2D
               \--PolygonCollider2D points: (-0.3, -0.7)
               \--PolygonCollider2D points: (-0.4, -0.9)
               \--PolygonCollider2D points: (-2.1, -0.9)
               \--PolygonCollider2D Offset: (-0.2, 0.2)
               \--PolygonCollider2D Bounds-Min: (19.6, 29.1, 0.0)
               \--PolygonCollider2D Bounds-Max: (19.6, 29.1, 0.0)
               \--PolygonCollider2D isTrigger: True
               \--Component: NonBouncer
               \--Component: DamageHero
Hornet Boss 1\A Dash Range
               \--Component: Transform
               \--GameObject activeSelf: True
               \--GameObject layer: 13
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: PolygonCollider2D
               \--PolygonCollider2D points: (0.0, 0.2)
               \--PolygonCollider2D points: (25.4, 18.4)
               \--PolygonCollider2D points: (26.5, -21.5)
               \--PolygonCollider2D points: (7.4, -21.3)
               \--PolygonCollider2D points: (0.0, -0.2)
               \--PolygonCollider2D points: (-7.0, -21.2)
               \--PolygonCollider2D points: (-25.2, -21.3)
               \--PolygonCollider2D points: (-24.9, 19.8)
               \--PolygonCollider2D Offset: (0.0, 0.0)
               \--PolygonCollider2D Bounds-Min: (-6.8, 7.0, 0.0)
               \--PolygonCollider2D Bounds-Max: (44.8, 48.4, 0.0)
               \--PolygonCollider2D isTrigger: True
               \--Component: RangeCheck
Hornet Boss 1\Sphere Ball
               \--Component: Transform
               \--GameObject activeSelf: False
               \--GameObject layer: 22
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: MeshFilter
               \--Component: MeshRenderer
               \--Component: tk2dSprite
               \--Component: tk2dSpriteAnimator
               \--Component: NonBouncer
               \--Component: CircleCollider2D
               \--CircleCollider2D radius: 2.53
               \--CircleCollider2D Offset: (-0.1, -0.3)
               \--CircleCollider2D Bounds-Min: (19.6, 28.6, 0.0)
               \--CircleCollider2D Bounds-Max: (19.6, 28.6, 0.0)
               \--CircleCollider2D isTrigger: True
               \--Component: DamageHero
               \--Component: SphereBall
Hornet Boss 1\Sphere Range
               \--Component: Transform
               \--GameObject activeSelf: True
               \--GameObject layer: 13
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: CircleCollider2D
               \--CircleCollider2D radius: 3.43
               \--CircleCollider2D Offset: (-0.1, -0.3)
               \--CircleCollider2D Bounds-Min: (16.3, 24.9, 0.0)
               \--CircleCollider2D Bounds-Max: (23.1, 31.7, 0.0)
               \--CircleCollider2D isTrigger: True
               \--Component: RangeCheck
Hornet Boss 1\Evade Check
               \--Component: Transform
               \--GameObject activeSelf: True
               \--GameObject layer: 14
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: BoxCollider2D
               \--BoxCollider2D Size: (3.5, 1.0)
               \--BoxCollider2D Offset: (1.3, 0.0)
               \--BoxCollider2D Bounds-Min: (16.6, 28.1, 0.0)
               \--BoxCollider2D Bounds-Max: (20.1, 29.1, 0.0)
               \--BoxCollider2D isTrigger: True
Hornet Boss 1\Run Away Check
               \--Component: Transform
               \--GameObject activeSelf: True
               \--GameObject layer: 13
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: BoxCollider2D
               \--BoxCollider2D Size: (9.5, 4.5)
               \--BoxCollider2D Offset: (0.0, 0.9)
               \--BoxCollider2D Bounds-Min: (14.9, 27.3, 0.0)
               \--BoxCollider2D Bounds-Max: (24.4, 31.8, 0.0)
               \--BoxCollider2D isTrigger: True
               \--Component: RangeCheck
Hornet Boss 1\Evade Range
               \--Component: Transform
               \--GameObject activeSelf: True
               \--GameObject layer: 13
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: BoxCollider2D
               \--BoxCollider2D Size: (7.6, 6.2)
               \--BoxCollider2D Offset: (0.0, 1.8)
               \--BoxCollider2D Bounds-Min: (19.6, 28.6, 0.0)
               \--BoxCollider2D Bounds-Max: (19.6, 28.6, 0.0)
               \--BoxCollider2D isTrigger: True
               \--Component: EvadeRange
Hornet Boss 1\A Dash Effect
               \--Component: Transform
               \--GameObject activeSelf: False
               \--GameObject layer: 11
               \--GameObject tag: Untagged
               \--Transform Position: (16.6, 28.8, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: MeshFilter
               \--Component: MeshRenderer
               \--Component: tk2dSprite
               \--Component: tk2dSpriteAnimator
               \--Component: ADashEffect
Hornet Boss 1\Dust HardLand
               \--Component: Transform
               \--GameObject activeSelf: True
               \--GameObject layer: 0
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 27.2, 0.0)
               \--Transform Rotation: (270.8, 0.0, 0.0)
               \--Transform LocalScale: (-1.0, 0.0, 1.0)
               \--Component: ParticleSystem
               \--Component: ParticleSystemRenderer
               \--Component: SetParticleScale
Hornet Boss 1\G Dash Effect
               \--Component: Transform
               \--GameObject activeSelf: False
               \--GameObject layer: 11
               \--GameObject tag: Untagged
               \--Transform Position: (12.9, 29.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: MeshFilter
               \--Component: MeshRenderer
               \--Component: tk2dSprite
               \--Component: tk2dSpriteAnimator
               \--Component: GDashEffect
Hornet Boss 1\Flash Effect
               \--Component: Transform
               \--GameObject activeSelf: False
               \--GameObject layer: 11
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.3, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.4, 1.1, 1.0)
               \--Component: MeshFilter
               \--Component: MeshRenderer
               \--Component: tk2dSprite
               \--Component: tk2dSpriteAnimator
               \--Component: FlashEffect
Hornet Boss 1\Throw Effect
               \--Component: Transform
               \--GameObject activeSelf: False
               \--GameObject layer: 11
               \--GameObject tag: Untagged
               \--Transform Position: (18.3, 28.5, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: MeshFilter
               \--Component: MeshRenderer
               \--Component: tk2dSprite
               \--Component: tk2dSpriteAnimator
               \--Component: ThrowEffect
Hornet Boss 1\A Sphere Range
               \--Component: Transform
               \--GameObject activeSelf: True
               \--GameObject layer: 13
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: BoxCollider2D
               \--BoxCollider2D Size: (13.1, 35.9)
               \--BoxCollider2D Offset: (0.0, 0.7)
               \--BoxCollider2D Bounds-Min: (13.1, 11.4, 0.0)
               \--BoxCollider2D Bounds-Max: (26.1, 47.3, 0.0)
               \--BoxCollider2D isTrigger: True
               \--Component: RangeCheck
Hornet Boss 1\Refight Range
               \--Component: Transform
               \--GameObject activeSelf: True
               \--GameObject layer: 13
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: BoxCollider2D
               \--BoxCollider2D Size: (43.8, 3.7)
               \--BoxCollider2D Offset: (-1.1, 0.1)
               \--BoxCollider2D Bounds-Min: (-1.2, 26.8, 0.0)
               \--BoxCollider2D Bounds-Max: (42.6, 30.5, 0.0)
               \--BoxCollider2D isTrigger: True
               \--Component: RangeCheck
Hornet Boss 1\Audio Player Actor(Clone)
               \--Component: Transform
               \--GameObject activeSelf: True
               \--GameObject layer: 0
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (-1.0, 1.0, 1.0)
               \--Component: AudioSource
Hornet Boss 1\Corpse Hornet 1(Clone)
               \--Component: Transform
               \--GameObject activeSelf: False
               \--GameObject layer: 11
               \--GameObject tag: Untagged
               \--Transform Position: (19.6, 28.6, 0.0)
               \--Transform Rotation: (0.0, 0.0, 0.0)
               \--Transform LocalScale: (1.0, 1.0, 1.0)
               \--Component: MeshFilter
               \--Component: MeshRenderer
               \--Component: tk2dSprite
               \--Component: tk2dSpriteAnimator
               \--Component: BoxCollider2D
               \--BoxCollider2D Size: (2.1, 3.4)
               \--BoxCollider2D Offset: (0.0, 0.1)
               \--BoxCollider2D Bounds-Min: (19.6, 28.6, 0.0)
               \--BoxCollider2D Bounds-Max: (19.6, 28.6, 0.0)
               \--BoxCollider2D isTrigger: False
               \--Component: Rigidbody2D
               \--PrintRigidbody2D mass: 1
               \--PrintRigidbody2D velocity: (0.0, 0.0)
               \--PrintRigidbody2D drag: 0
               \--PrintRigidbody2D angularVelocity: 0
               \--PrintRigidbody2D angularDrag: 0.05
               \--PrintRigidbody2D gravityScale: 0.75
               \--PrintRigidbody2D isKinematic: False
               \--PrintRigidbody2D interpolation: None
               \--PrintRigidbody2D freezeRotation: True
               \--PrintRigidbody2D collisionDetectionMode: Continuous
               \--Component: PlayMakerFSM
               \--PFSM Name: Control
               \--PFSM FsmDescription: 
               \--PFSM StateNames
               \----PFSM StateName: Blow
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Launch
               \----PFSM ---- Actions for state: Actions on Blow ::: TransitionToAudioSnapshot
               \----PFSM ---- Actions for state: Actions on Blow ::: GetOwner
               \----PFSM ---- Actions for state: Actions on Blow ::: AudioPlayerOneShotSingle
               \----PFSM ---- Actions for state: Actions on Blow ::: SendMessage
               \----PFSM ---- Actions for state: Actions on Blow ::: AudioPlaySimple
               \----PFSM ---- Actions for state: Actions on Blow ::: SendEventByName
               \----PFSM ---- Actions for state: Actions on Blow ::: FindGameObject
               \----PFSM ---- Actions for state: Actions on Blow ::: DestroyObject
               \----PFSM ---- Actions for state: Actions on Blow ::: SpawnRandomObjectsV2
               \----PFSM ---- Actions for state: Actions on Blow ::: SpawnRandomObjectsV2
               \----PFSM ---- Actions for state: Actions on Blow ::: CreateObject
               \----PFSM ---- Actions for state: Actions on Blow ::: SendMessage
               \----PFSM ---- Actions for state: Actions on Blow ::: SendEventByName
               \----PFSM ---- TransitionToAudioSnapshot(FsmObject, snapshot? ) = Silent (UnityEngine.AudioMixerSnapshot)
               \----PFSM ---- TransitionToAudioSnapshot(String, snapshot?. type) = FsmObject
               \----PFSM ---- TransitionToAudioSnapshot(String, snapshot?.Name) = 
               \----PFSM ---- TransitionToAudioSnapshot(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmObject, a?.audioClip) = Hornet_Fight_Death_01 (UnityEngine.AudioClip)
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(AudioClip, a?.audioClip?.Value) = Hornet_Fight_Death_01 (UnityEngine.AudioClip)
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioPlayer?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.audioPlayer?.Value) = Audio Player Actor (UnityEngine.GameObject)
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Self) = None      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.spawnPoint?.Name) = Self
               \----PFSM ---- AudioPlayerOneShotSingle(, a?.spawnPoint?.Value) = 
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0      :: IsNone? = False
               \----PFSM ---- AudioPlaySimple(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlaySimple(FsmGameObject, ) = None      :: IsNone? = False
               \----PFSM ---- AudioPlaySimple(FsmObject, ) = boss_explode_clean (UnityEngine.AudioClip)      :: IsNone? = False
               \----PFSM ---- SendEventByName (Name) = 
               \----PFSM ---- SendEventByName (delay) = 0
               \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
               \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
               \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
               \----PFSM ---- SendEventByName (sendEvent) = HORNET KILLED
               \----PFSM ---- CreateObject(FsmGameObject, ) = White Wave      :: IsNone? = False
               \----PFSM ---- CreateObject(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
               \----PFSM ---- CreateObject(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
               \----PFSM ---- CreateObject(FsmGameObject, Self) = None      :: IsNone? = False
               \----PFSM ---- CreateObject(FsmGameObject, ) = None      :: IsNone? = True
               \----PFSM ---- CreateObject (networkGroup) = 0
               \----PFSM ---- CreateObject (networkInstantiate) = False
               \----PFSM ---- SendEventByName (Name) = 
               \----PFSM ---- SendEventByName (delay) = 0
               \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
               \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
               \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
               \----PFSM ---- SendEventByName (sendEvent) = AverageShake
               \----PFSM StateName: Launch
               \----PFSM ---- Transitions for state: Transition on FINISHED to state In Air
               \----PFSM ---- Actions for state: Actions on Launch ::: FaceObject
               \----PFSM ---- Actions for state: Actions on Launch ::: GetScale
               \----PFSM ---- Actions for state: Actions on Launch ::: FloatMultiply
               \----PFSM ---- Actions for state: Actions on Launch ::: SetVelocity2d
               \----PFSM ---- Actions for state: Actions on Launch ::: NextFrameEvent
               \----PFSM ---- Actions for state: Actions on Launch ::: SetRotation
               \----PFSM ---- FaceObject(FsmGameObject, Self) = None      :: IsNone? = False
               \----PFSM ---- FaceObject(FsmGameObject, Hero) = Knight      :: IsNone? = False
               \----PFSM ---- FaceObject(FsmString, ) =       :: IsNone? = False
               \----PFSM ---- FaceObject(Boolean, playNewAnimation) = False
               \----PFSM ---- FaceObject(Boolean, resetFrame) = False
               \----PFSM ---- FaceObject(FsmBool, ) = False      :: IsNone? = False
               \----PFSM ---- GetScale(Boolean, everyFrame) = False
               \----PFSM ---- GetScale(FsmGameObject, ) = None      :: IsNone? = False
               \----PFSM ---- GetScale(Space, space) = World
               \----PFSM ---- GetScale(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
               \----PFSM ---- GetScale(FsmFloat, X Velocity) = 0      :: IsNone? = False
               \----PFSM ---- GetScale(FsmFloat, ) = 0      :: IsNone? = True
               \----PFSM ---- GetScale(FsmFloat, ) = 0      :: IsNone? = True
               \----PFSM ---- FloatMultiply (Name) = 
               \----PFSM ---- FloatMultiply (floatVariable) = 0
               \----PFSM ---- FloatMultiply (multiplyBy) = 5
               \----PFSM ---- SetVelocity2d (Name) = 
               \----PFSM ---- SetVelocity2d (gameObject?.GameObject) = None
               \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
               \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
               \----PFSM ---- SetVelocity2d (x) = 0
               \----PFSM ---- SetVelocity2d (y) = 20
               \----PFSM ---- SetVelocity2d (vector?.Value name) = 
               \----PFSM ---- SetVelocity2d (x name) = X Velocity
               \----PFSM ---- SetVelocity2d (y name) = 
               \----PFSM ---- SetVelocity2d (everyFrame) = False
               \----PFSM ---- NextFrameEvent(String, sendEvent) = FINISHED
               \----PFSM ---- SetRotation (Name) = 
               \----PFSM ---- SetRotation (GameObject) = None
               \----PFSM ---- SetRotation (GameObject Name) = 
               \----PFSM ---- SetRotation (OwnerOption) = UseOwner
               \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetRotation (vector name) = 
               \----PFSM ---- SetRotation (everyFrame) = False
               \----PFSM ---- SetRotation (lateUpdate) = False
               \----PFSM ---- SetRotation (space) = World
               \----PFSM ---- SetRotation (xAngle) = 0
               \----PFSM ---- SetRotation (yAngle) = 0
               \----PFSM ---- SetRotation (zAngle) = 0
               \----PFSM ---- SetRotation (xAngle name) = 
               \----PFSM ---- SetRotation (yAngle name) = 
               \----PFSM ---- SetRotation (zAngle name) = 
               \----PFSM StateName: In Air
               \----PFSM ---- Transitions for state: Transition on LAND to state Land
               \----PFSM ---- Actions for state: Actions on In Air ::: CheckCollisionSideEnter
               \----PFSM ---- Actions for state: Actions on In Air ::: CheckCollisionSide
               \----PFSM ---- Actions for state: Actions on In Air ::: SetRotation
               \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False      :: IsNone? = False
               \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False      :: IsNone? = True
               \----PFSM ---- CheckCollisionSideEnter(String, bottomHitEvent) = LAND
               \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False      :: IsNone? = True
               \----PFSM ---- CheckCollisionSideEnter(, leftHitEvent) = 
               \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False      :: IsNone? = True
               \----PFSM ---- CheckCollisionSideEnter(, rightHitEvent) = 
               \----PFSM ---- CheckCollisionSideEnter(FsmBool, ) = False      :: IsNone? = True
               \----PFSM ---- CheckCollisionSideEnter(, topHitEvent) = 
               \----PFSM ---- CheckCollisionSideEnter(Boolean, otherLayer) = False
               \----PFSM ---- CheckCollisionSideEnter(Int32, otherLayerNumber) = 0
               \----PFSM ---- CheckCollisionSide(FsmBool, ) = False      :: IsNone? = False
               \----PFSM ---- CheckCollisionSide(FsmBool, ) = False      :: IsNone? = True
               \----PFSM ---- CheckCollisionSide(String, bottomHitEvent) = LAND
               \----PFSM ---- CheckCollisionSide(FsmBool, ) = False      :: IsNone? = True
               \----PFSM ---- CheckCollisionSide(, leftHitEvent) = 
               \----PFSM ---- CheckCollisionSide(FsmBool, ) = False      :: IsNone? = True
               \----PFSM ---- CheckCollisionSide(, rightHitEvent) = 
               \----PFSM ---- CheckCollisionSide(FsmBool, ) = False      :: IsNone? = True
               \----PFSM ---- CheckCollisionSide(, topHitEvent) = 
               \----PFSM ---- CheckCollisionSide(Boolean, otherLayer) = False
               \----PFSM ---- CheckCollisionSide(Int32, otherLayerNumber) = 0
               \----PFSM ---- SetRotation (Name) = 
               \----PFSM ---- SetRotation (GameObject) = None
               \----PFSM ---- SetRotation (GameObject Name) = 
               \----PFSM ---- SetRotation (OwnerOption) = UseOwner
               \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetRotation (vector name) = 
               \----PFSM ---- SetRotation (everyFrame) = False
               \----PFSM ---- SetRotation (lateUpdate) = False
               \----PFSM ---- SetRotation (space) = World
               \----PFSM ---- SetRotation (xAngle) = 0
               \----PFSM ---- SetRotation (yAngle) = 0
               \----PFSM ---- SetRotation (zAngle) = 0
               \----PFSM ---- SetRotation (xAngle name) = 
               \----PFSM ---- SetRotation (yAngle name) = 
               \----PFSM ---- SetRotation (zAngle name) = 
               \----PFSM StateName: Land
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Check Pos
               \----PFSM ---- Actions for state: Actions on Land ::: Tk2dPlayAnimation
               \----PFSM ---- Actions for state: Actions on Land ::: SetVelocity2d
               \----PFSM ---- Actions for state: Actions on Land ::: Wait
               \----PFSM ---- Actions for state: Actions on Land ::: SetRotation
               \----PFSM ---- Tk2dPlayAnimation (Name) = 
               \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
               \----PFSM ---- Tk2dPlayAnimation (clipName) = Wounded
               \----PFSM ---- SetVelocity2d (Name) = 
               \----PFSM ---- SetVelocity2d (gameObject?.GameObject) = None
               \----PFSM ---- SetVelocity2d (gameObject?.GameObject?.Name) = 
               \----PFSM ---- SetVelocity2d (vector?.Value) = (0.0, 0.0)
               \----PFSM ---- SetVelocity2d (x) = 0
               \----PFSM ---- SetVelocity2d (y) = 0
               \----PFSM ---- SetVelocity2d (vector?.Value name) = 
               \----PFSM ---- SetVelocity2d (x name) = 
               \----PFSM ---- SetVelocity2d (y name) = 
               \----PFSM ---- SetVelocity2d (everyFrame) = False
               \----PFSM ---- Wait(String, finishEvent) = FINISHED
               \----PFSM ---- Wait(Boolean, realTime) = False
               \----PFSM ---- Wait(FsmFloat, ) = 3      :: IsNone? = False
               \----PFSM ---- SetRotation (Name) = 
               \----PFSM ---- SetRotation (GameObject) = None
               \----PFSM ---- SetRotation (GameObject Name) = 
               \----PFSM ---- SetRotation (OwnerOption) = UseOwner
               \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetRotation (vector name) = 
               \----PFSM ---- SetRotation (everyFrame) = False
               \----PFSM ---- SetRotation (lateUpdate) = False
               \----PFSM ---- SetRotation (space) = World
               \----PFSM ---- SetRotation (xAngle) = 0
               \----PFSM ---- SetRotation (yAngle) = 0
               \----PFSM ---- SetRotation (zAngle) = 0
               \----PFSM ---- SetRotation (xAngle name) = 
               \----PFSM ---- SetRotation (yAngle name) = 
               \----PFSM ---- SetRotation (zAngle name) = 
               \----PFSM StateName: Check Pos
               \----PFSM ---- Transitions for state: Transition on L to state L
               \----PFSM ---- Transitions for state: Transition on R to state R
               \----PFSM ---- Actions for state: Actions on Check Pos ::: GetPosition
               \----PFSM ---- Actions for state: Actions on Check Pos ::: FloatCompare
               \----PFSM ---- GetPosition (Name) = 
               \----PFSM ---- GetPosition (GameObject) = None
               \----PFSM ---- GetPosition (GameObject Name) = 
               \----PFSM ---- GetPosition (OwnerOption) = UseOwner
               \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- GetPosition (vector Name) = 
               \----PFSM ---- GetPosition (everyFrame) = False
               \----PFSM ---- GetPosition (space) = World
               \----PFSM ---- GetPosition(FsmFloat, X Pos) = 0      :: IsNone? = False
               \----PFSM ---- GetPosition(FsmFloat, ) = 0      :: IsNone? = True
               \----PFSM ---- GetPosition(FsmFloat, ) = 0      :: IsNone? = True
               \----PFSM ---- GetPosition(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
               \----PFSM ---- FloatCompare (Name) = 
               \----PFSM ---- FloatCompare (float1) = 0
               \----PFSM ---- FloatCompare (float2) = 27.3
               \----PFSM ---- FloatCompare (float1 Name) = X Pos
               \----PFSM ---- FloatCompare (float2 Name) = 
               \----PFSM ---- FloatCompare (greaterThan) = R
               \----PFSM ---- FloatCompare (lessThan) = L
               \----PFSM ---- FloatCompare (equal) = 
               \----PFSM ---- FloatCompare (everyFrame) = False
               \----PFSM StateName: L
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Jump
               \----PFSM ---- Actions for state: Actions on L ::: SetScale
               \----PFSM ---- Actions for state: Actions on L ::: SetVector3Value
               \----PFSM ---- Actions for state: Actions on L ::: SetFloatValue
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (GameObject Name) = 
               \----PFSM ---- SetScale (GameObject V) = 
               \----PFSM ---- SetScale (GameObject VName) = 
               \----PFSM ---- SetScale (OwnerOption) = UseOwner
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (vector Name) = 
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = -1
               \----PFSM ---- SetScale (x Name) = 
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (y Name) = 
               \----PFSM ---- SetScale (z) = 0
               \----PFSM ---- SetScale (z Name) = 
               \----PFSM ---- SetFloatValue (Name) = 
               \----PFSM ---- SetFloatValue (floatValue) = 45
               \----PFSM ---- SetFloatValue (floatValue?.Name) = 
               \----PFSM ---- SetFloatValue (floatVariable) = 0
               \----PFSM ---- SetFloatValue (floatVariable?.Name) = Rotation
               \----PFSM StateName: R
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Jump
               \----PFSM ---- Actions for state: Actions on R ::: SetScale
               \----PFSM ---- Actions for state: Actions on R ::: SetVector3Value
               \----PFSM ---- Actions for state: Actions on R ::: SetFloatValue
               \----PFSM ---- SetScale (Name) = 
               \----PFSM ---- SetScale (GameObject) = None
               \----PFSM ---- SetScale (GameObject Name) = 
               \----PFSM ---- SetScale (GameObject V) = 
               \----PFSM ---- SetScale (GameObject VName) = 
               \----PFSM ---- SetScale (OwnerOption) = UseOwner
               \----PFSM ---- SetScale (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetScale (vector Name) = 
               \----PFSM ---- SetScale (everyFrame) = False
               \----PFSM ---- SetScale (lateUpdate) = False
               \----PFSM ---- SetScale (x) = 1
               \----PFSM ---- SetScale (x Name) = 
               \----PFSM ---- SetScale (y) = 0
               \----PFSM ---- SetScale (y Name) = 
               \----PFSM ---- SetScale (z) = 0
               \----PFSM ---- SetScale (z Name) = 
               \----PFSM ---- SetFloatValue (Name) = 
               \----PFSM ---- SetFloatValue (floatValue) = -45
               \----PFSM ---- SetFloatValue (floatValue?.Name) = 
               \----PFSM ---- SetFloatValue (floatVariable) = 0
               \----PFSM ---- SetFloatValue (floatVariable?.Name) = Rotation
               \----PFSM StateName: Jump
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Throw Start
               \----PFSM ---- Actions for state: Actions on Jump ::: Wait
               \----PFSM ---- Actions for state: Actions on Jump ::: AudioPlayerOneShotSingle
               \----PFSM ---- Actions for state: Actions on Jump ::: PlayParticleEmitter
               \----PFSM ---- Actions for state: Actions on Jump ::: SetMeshRenderer
               \----PFSM ---- Actions for state: Actions on Jump ::: ActivateGameObject
               \----PFSM ---- Actions for state: Actions on Jump ::: SetCollider
               \----PFSM ---- Actions for state: Actions on Jump ::: SetIsKinematic2d
               \----PFSM ---- Actions for state: Actions on Jump ::: Tk2dPlayAnimation
               \----PFSM ---- Actions for state: Actions on Jump ::: iTweenMoveBy
               \----PFSM ---- Wait(String, finishEvent) = FINISHED
               \----PFSM ---- Wait(Boolean, realTime) = False
               \----PFSM ---- Wait(FsmFloat, ) = 0.415      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmObject, a?.audioClip) = Hornet_Fight_Stun_02 (UnityEngine.AudioClip)
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(AudioClip, a?.audioClip?.Value) = Hornet_Fight_Stun_02 (UnityEngine.AudioClip)
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioPlayer?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.audioPlayer?.Value) = Audio Player Actor (UnityEngine.GameObject)
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Self) = None      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.spawnPoint?.Name) = Self
               \----PFSM ---- AudioPlayerOneShotSingle(, a?.spawnPoint?.Value) = 
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0      :: IsNone? = False
               \----PFSM ---- PlayParticleEmitter(FsmGameObject, Grass) = Grass      :: IsNone? = False
               \----PFSM ---- PlayParticleEmitter(GameObject, GameObject value) = Grass (UnityEngine.GameObject)
               \----PFSM ---- PlayParticleEmitter(String, GameObject value name) = Grass
               \----PFSM ---- PlayParticleEmitter(String, GameObject name) = Grass
               \----PFSM ---- PlayParticleEmitter(FsmInt, ) = 0      :: IsNone? = False
               \----PFSM ---- SetMeshRenderer (Name) = 
               \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = 
               \----PFSM ---- SetMeshRenderer (active) = False
               \----PFSM ---- ActivateGameObject (Name) = 
               \----PFSM ---- ActivateGameObject (GameObject) = Leave Anim
               \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
               \----PFSM ---- ActivateGameObject (activate) = True
               \----PFSM ---- SetCollider (Name) = 
               \----PFSM ---- SetCollider (gameObject?.GameObject?.Name) = 
               \----PFSM ---- SetCollider (active) = False
               \----PFSM ---- SetIsKinematic2d (Name) = 
               \----PFSM ---- SetIsKinematic2d (gameObject?.GameObject?.Name) = 
               \----PFSM ---- SetIsKinematic2d (isKinematic) = True
               \----PFSM ---- Tk2dPlayAnimation (Name) = 
               \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
               \----PFSM ---- Tk2dPlayAnimation (clipName) = Jump Full
               \----PFSM StateName: Throw Start
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Throw
               \----PFSM ---- Actions for state: Actions on Throw Start ::: Tk2dPlayAnimationWithEvents
               \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
               \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
               \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Throw Side Start      :: IsNone? = False
               \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, Leave Anim) = Leave Anim      :: IsNone? = False
               \----PFSM StateName: Throw
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Yank
               \----PFSM ---- Actions for state: Actions on Throw ::: ActivateGameObject
               \----PFSM ---- Actions for state: Actions on Throw ::: Tk2dPlayAnimationWithEvents
               \----PFSM ---- Actions for state: Actions on Throw ::: Tk2dPlayAnimation
               \----PFSM ---- Actions for state: Actions on Throw ::: AudioPlayerOneShotSingle
               \----PFSM ---- ActivateGameObject (Name) = 
               \----PFSM ---- ActivateGameObject (GameObject) = Thread
               \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
               \----PFSM ---- ActivateGameObject (activate) = True
               \----PFSM ---- Tk2dPlayAnimationWithEvents(String, animationCompleteEvent) = FINISHED
               \----PFSM ---- Tk2dPlayAnimationWithEvents(, animationTriggerEvent) = 
               \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmString, ) = Thread 1      :: IsNone? = False
               \----PFSM ---- Tk2dPlayAnimationWithEvents(FsmGameObject, Thread) = Thread      :: IsNone? = False
               \----PFSM ---- Tk2dPlayAnimation (Name) = 
               \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
               \----PFSM ---- Tk2dPlayAnimation (clipName) = Throw Side
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmObject, a?.audioClip) = hornet_needle_thow_spin (UnityEngine.AudioClip)
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(AudioClip, a?.audioClip?.Value) = hornet_needle_thow_spin (UnityEngine.AudioClip)
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioPlayer?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.audioPlayer?.Value) = Audio Player Actor (UnityEngine.GameObject)
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.spawnPoint?.Name) = Hero
               \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.spawnPoint?.Value) = Knight (UnityEngine.GameObject)
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0      :: IsNone? = False
               \----PFSM StateName: Yank
               \----PFSM ---- Transitions for state: Transition on FINISHED to state End
               \----PFSM ---- Actions for state: Actions on Yank ::: Tk2dPlayAnimation
               \----PFSM ---- Actions for state: Actions on Yank ::: AudioPlayerOneShotSingle
               \----PFSM ---- Actions for state: Actions on Yank ::: SetParent
               \----PFSM ---- Actions for state: Actions on Yank ::: Rotate
               \----PFSM ---- Actions for state: Actions on Yank ::: SetParent
               \----PFSM ---- Actions for state: Actions on Yank ::: iTweenMoveBy
               \----PFSM ---- Actions for state: Actions on Yank ::: AudioPlayerOneShotSingle
               \----PFSM ---- Tk2dPlayAnimation (Name) = 
               \----PFSM ---- Tk2dPlayAnimation (animLibName) = 
               \----PFSM ---- Tk2dPlayAnimation (clipName) = Harpoon Side
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmObject, a?.audioClip) = Hornet_Fight_Yell_03 (UnityEngine.AudioClip)
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(AudioClip, a?.audioClip?.Value) = Hornet_Fight_Yell_03 (UnityEngine.AudioClip)
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioPlayer?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.audioPlayer?.Value) = Audio Player Actor (UnityEngine.GameObject)
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Self) = None      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.spawnPoint?.Name) = Self
               \----PFSM ---- AudioPlayerOneShotSingle(, a?.spawnPoint?.Value) = 
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0      :: IsNone? = False
               \----PFSM ---- SetParent(FsmGameObject, Thread) = Thread      :: IsNone? = False
               \----PFSM ---- SetParent(GameObject, GameObject value) = Thread (UnityEngine.GameObject)
               \----PFSM ---- SetParent(String, GameObject value name) = Thread
               \----PFSM ---- SetParent(String, GameObject name) = Thread
               \----PFSM ---- SetParent(FsmGameObject, ) = None      :: IsNone? = False
               \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
               \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
               \----PFSM ---- SetParent(FsmGameObject, Thread) = Thread      :: IsNone? = False
               \----PFSM ---- SetParent(GameObject, GameObject value) = Thread (UnityEngine.GameObject)
               \----PFSM ---- SetParent(String, GameObject value name) = Thread
               \----PFSM ---- SetParent(String, GameObject name) = Thread
               \----PFSM ---- SetParent(FsmGameObject, Self) = None      :: IsNone? = False
               \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
               \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmObject, a?.audioClip) = hornet_dash (UnityEngine.AudioClip)
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioClip?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(AudioClip, a?.audioClip?.Value) = hornet_dash (UnityEngine.AudioClip)
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, ) = Audio Player Actor      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.audioPlayer?.Name) = 
               \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.audioPlayer?.Value) = Audio Player Actor (UnityEngine.GameObject)
               \----PFSM ---- AudioPlayerOneShotSingle(FsmGameObject, Hero) = Knight      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(String, a?.spawnPoint?.Name) = Hero
               \----PFSM ---- AudioPlayerOneShotSingle(GameObject, a?.spawnPoint?.Value) = Knight (UnityEngine.GameObject)
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1.15      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 1.15      :: IsNone? = False
               \----PFSM ---- AudioPlayerOneShotSingle(FsmFloat, ) = 0      :: IsNone? = False
               \----PFSM StateName: End
               \----PFSM ---- Transitions for state: Transition on FINISHED to state 
               \----PFSM ---- Actions for state: Actions on End ::: SendEventByName
               \----PFSM ---- Actions for state: Actions on End ::: SetParent
               \----PFSM ---- Actions for state: Actions on End ::: SetRotation
               \----PFSM ---- Actions for state: Actions on End ::: PlayParticleEmitter
               \----PFSM ---- Actions for state: Actions on End ::: SetMeshRenderer
               \----PFSM ---- Actions for state: Actions on End ::: SetMeshRenderer
               \----PFSM ---- Actions for state: Actions on End ::: SendEventByName
               \----PFSM ---- SendEventByName (Name) = 
               \----PFSM ---- SendEventByName (delay) = 0
               \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = CameraParent
               \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
               \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
               \----PFSM ---- SendEventByName (sendEvent) = EnemyKillShake
               \----PFSM ---- SetParent(FsmGameObject, Grass Escape) = Grass Escape      :: IsNone? = False
               \----PFSM ---- SetParent(GameObject, GameObject value) = Grass Escape (UnityEngine.GameObject)
               \----PFSM ---- SetParent(String, GameObject value name) = Grass Escape
               \----PFSM ---- SetParent(String, GameObject name) = Grass Escape
               \----PFSM ---- SetParent(FsmGameObject, ) = None      :: IsNone? = False
               \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
               \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
               \----PFSM ---- SetRotation (Name) = 
               \----PFSM ---- SetRotation (GameObject) = Grass Escape
               \----PFSM ---- SetRotation (GameObject Name) = Grass Escape
               \----PFSM ---- SetRotation (OwnerOption) = SpecifyGameObject
               \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetRotation (vector name) = 
               \----PFSM ---- SetRotation (everyFrame) = False
               \----PFSM ---- SetRotation (lateUpdate) = False
               \----PFSM ---- SetRotation (space) = World
               \----PFSM ---- SetRotation (xAngle) = 0
               \----PFSM ---- SetRotation (yAngle) = 0
               \----PFSM ---- SetRotation (zAngle) = 0
               \----PFSM ---- SetRotation (xAngle name) = 
               \----PFSM ---- SetRotation (yAngle name) = 
               \----PFSM ---- SetRotation (zAngle name) = 
               \----PFSM ---- PlayParticleEmitter(FsmGameObject, Grass Escape) = Grass Escape      :: IsNone? = False
               \----PFSM ---- PlayParticleEmitter(GameObject, GameObject value) = Grass Escape (UnityEngine.GameObject)
               \----PFSM ---- PlayParticleEmitter(String, GameObject value name) = Grass Escape
               \----PFSM ---- PlayParticleEmitter(String, GameObject name) = Grass Escape
               \----PFSM ---- PlayParticleEmitter(FsmInt, ) = 0      :: IsNone? = False
               \----PFSM ---- SetMeshRenderer (Name) = 
               \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = 
               \----PFSM ---- SetMeshRenderer (active) = False
               \----PFSM ---- SetMeshRenderer (Name) = 
               \----PFSM ---- SetMeshRenderer (gameObject?.GameObject?.Name) = Leave Anim
               \----PFSM ---- SetMeshRenderer (active) = False
               \----PFSM ---- SendEventByName (Name) = 
               \----PFSM ---- SendEventByName (delay) = 0
               \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
               \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
               \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
               \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
               \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
               \----PFSM ---- SendEventByName (sendEvent) = HORNET LEAVE
               \----PFSM StateName: Set PD
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Blow
               \----PFSM ---- Actions for state: Actions on Set PD ::: SetPlayerDataBool
               \----PFSM ---- Actions for state: Actions on Set PD ::: CallMethodProper
               \----PFSM ---- Actions for state: Actions on Set PD ::: SendMessage
               \----PFSM ---- SetPlayerDataBool (Name) = 
               \----PFSM ---- SetPlayerDataInt (boolName) = True
               \----PFSM ---- SetPlayerDataBool (boolName) = hornet1Defeated
               \----PFSM ---- SetPlayerDataBool (storeValue) = 
               \----PFSM ---- CallMethodProper(FsmString, ) = GameManager      :: IsNone? = False
               \----PFSM ---- CallMethodProper(FsmGameObject, GameManager) = _GameManager      :: IsNone? = False
               \----PFSM ---- CallMethodProper(FsmString, ) = AwardAchievement      :: IsNone? = False
               \----PFSM ---- CallMethodProper(FsmVar, ) = HORNET_1      :: IsNone? = False      :: useVariable? = False      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = HORNET_1      :::::::::::::::::::
               \----PFSM ---- CallMethodProper(FsmVar, ) = None      :: IsNone? = True      :: useVariable? = True      :: objectType? = UnityEngine.Object      :: intValue? = 0      :: floatValue? = 0      :: objectReference? =       :: vector2Value? = (0.0, 0.0)      :: vector3Value? = (0.0, 0.0, 0.0)      :: vector4Value? = (0.0, 0.0, 0.0, 0.0)      :: quaternionValue? = (0.0, 0.0, 0.0, 0.0)      :: stringValue? = 
               \----PFSM StateName: Limit Pos
               \----PFSM ---- Transitions for state: Transition on FINISHED to state Set PD
               \----PFSM ---- Actions for state: Actions on Limit Pos ::: GetPosition
               \----PFSM ---- Actions for state: Actions on Limit Pos ::: FloatClamp
               \----PFSM ---- Actions for state: Actions on Limit Pos ::: SetPosition
               \----PFSM ---- Actions for state: Actions on Limit Pos ::: GetPosition
               \----PFSM ---- Actions for state: Actions on Limit Pos ::: FloatClamp
               \----PFSM ---- Actions for state: Actions on Limit Pos ::: SetPosition
               \----PFSM ---- GetPosition (Name) = 
               \----PFSM ---- GetPosition (GameObject) = None
               \----PFSM ---- GetPosition (GameObject Name) = 
               \----PFSM ---- GetPosition (OwnerOption) = UseOwner
               \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- GetPosition (vector Name) = 
               \----PFSM ---- GetPosition (everyFrame) = False
               \----PFSM ---- GetPosition (space) = World
               \----PFSM ---- GetPosition(FsmFloat, ) = 0      :: IsNone? = True
               \----PFSM ---- GetPosition(FsmFloat, Y Pos) = 0      :: IsNone? = False
               \----PFSM ---- GetPosition(FsmFloat, ) = 0      :: IsNone? = True
               \----PFSM ---- GetPosition(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
               \----PFSM ---- SetPosition (Name) = 
               \----PFSM ---- SetPosition (GameObject) = None
               \----PFSM ---- SetPosition (GameObject Name) = 
               \----PFSM ---- SetPosition (OwnerOption) = UseOwner
               \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetPosition (vector Name) = 
               \----PFSM ---- SetPosition (everyFrame) = False
               \----PFSM ---- SetPosition (space) = World
               \----PFSM ---- SetPosition (lateUpdate) = False
               \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
               \----PFSM ---- SetPosition(FsmFloat, Y Pos) = 0      :: IsNone? = False
               \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
               \----PFSM ---- SetPosition(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
               \----PFSM ---- GetPosition (Name) = 
               \----PFSM ---- GetPosition (GameObject) = None
               \----PFSM ---- GetPosition (GameObject Name) = 
               \----PFSM ---- GetPosition (OwnerOption) = UseOwner
               \----PFSM ---- GetPosition (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- GetPosition (vector Name) = 
               \----PFSM ---- GetPosition (everyFrame) = False
               \----PFSM ---- GetPosition (space) = World
               \----PFSM ---- GetPosition(FsmFloat, X Pos) = 0      :: IsNone? = False
               \----PFSM ---- GetPosition(FsmFloat, ) = 0      :: IsNone? = True
               \----PFSM ---- GetPosition(FsmFloat, ) = 0      :: IsNone? = True
               \----PFSM ---- GetPosition(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
               \----PFSM ---- SetPosition (Name) = 
               \----PFSM ---- SetPosition (GameObject) = None
               \----PFSM ---- SetPosition (GameObject Name) = 
               \----PFSM ---- SetPosition (OwnerOption) = UseOwner
               \----PFSM ---- SetPosition (vector) = (0.0, 0.0, 0.0)
               \----PFSM ---- SetPosition (vector Name) = 
               \----PFSM ---- SetPosition (everyFrame) = False
               \----PFSM ---- SetPosition (space) = World
               \----PFSM ---- SetPosition (lateUpdate) = False
               \----PFSM ---- SetPosition(FsmFloat, X Pos) = 0      :: IsNone? = False
               \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
               \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
               \----PFSM ---- SetPosition(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
               \--PFSM Active: False
               \--PFSM ActiveStateName: 
               \--Component: AudioSource
               \--Component: NonBouncer
               \--Component: PlayMakerFixedUpdate
               \--Component: HornetCorpse
Hornet Boss 1\Corpse Hornet 1(Clone)\Thread
                                      \--Component: Transform
                                      \--GameObject activeSelf: False
                                      \--GameObject layer: 13
                                      \--GameObject tag: Untagged
                                      \--Transform Position: (26.0, 34.0, 0.0)
                                      \--Transform Rotation: (0.0, 0.0, 45.0)
                                      \--Transform LocalScale: (2.3, 1.0, 1.0)
                                      \--Component: MeshFilter
                                      \--Component: MeshRenderer
                                      \--Component: tk2dSprite
                                      \--Component: tk2dSpriteAnimator
Hornet Boss 1\Corpse Hornet 1(Clone)\Grass
                                      \--Component: Transform
                                      \--GameObject activeSelf: True
                                      \--GameObject layer: 11
                                      \--GameObject tag: Untagged
                                      \--Transform Position: (19.6, 27.2, -0.1)
                                      \--Transform Rotation: (0.0, 0.0, 0.0)
                                      \--Transform LocalScale: (1.8, 1.2, 1.0)
                                      \--Component: ParticleSystem
                                      \--Component: ParticleSystemRenderer
                                      \--Component: SetParticleScale
Hornet Boss 1\Corpse Hornet 1(Clone)\Grass Escape
                                      \--Component: Transform
                                      \--GameObject activeSelf: True
                                      \--GameObject layer: 11
                                      \--GameObject tag: Untagged
                                      \--Transform Position: (19.7, 28.6, -0.1)
                                      \--Transform Rotation: (89.4, 270.0, 0.0)
                                      \--Transform LocalScale: (0.0, 1.0, 1.0)
                                      \--Component: ParticleSystem
                                      \--Component: ParticleSystemRenderer
                                      \--Component: SetParticleScale
Hornet Boss 1\Corpse Hornet 1(Clone)\Start Pt
                                      \--Component: Transform
                                      \--GameObject activeSelf: True
                                      \--GameObject layer: 16
                                      \--GameObject tag: Untagged
                                      \--Transform Position: (19.6, 28.6, 0.0)
                                      \--Transform Rotation: (0.0, 0.0, 135.0)
                                      \--Transform LocalScale: (1.0, 1.0, 1.0)
                                      \--Component: ParticleSystem
                                      \--Component: ParticleSystemRenderer
                                      \--Component: ParticleSystemAutoDestroy
Hornet Boss 1\Corpse Hornet 1(Clone)\Leave Anim
                                      \--Component: Transform
                                      \--GameObject activeSelf: False
                                      \--GameObject layer: 11
                                      \--GameObject tag: Untagged
                                      \--Transform Position: (19.6, 28.6, 0.0)
                                      \--Transform Rotation: (0.0, 0.0, 0.0)
                                      \--Transform LocalScale: (1.0, 1.0, 1.0)
                                      \--Component: MeshFilter
                                      \--Component: MeshRenderer
                                      \--Component: tk2dSprite
                                      \--Component: tk2dSpriteAnimator
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Attack Detect
Attack Detect
 \--Component: Transform
 \--GameObject activeSelf: True
 \--GameObject layer: 11
 \--GameObject tag: Untagged
 \--Transform Position: (25.6, 28.6, 0.0)
 \--Transform Rotation: (0.0, 0.0, 0.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
 \--Component: PlayMakerFSM
 \--PFSM Name: Detect
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Detect
 \----PFSM ---- Transitions for state: Transition on NAIL HIT to state Send
 \----PFSM ---- Actions for state: Actions on Detect ::: GetParent
 \----PFSM ---- Actions for state: Actions on Detect ::: SetParent
 \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
 \----PFSM ---- SetParent(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- SetParent(, GameObject value) = 
 \----PFSM ---- SetParent(, GameObject value name) = 
 \----PFSM ---- SetParent(String, GameObject name) = 
 \----PFSM ---- SetParent(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
 \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
 \----PFSM StateName: Send
 \----PFSM ---- Actions for state: Actions on Send ::: SendEventByName
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Parent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = ATTACKED
 \--PFSM Active: True
 \--PFSM ActiveStateName: Detect
 \--Component: BoxCollider2D
 \--BoxCollider2D Size: (1.0, 2.4)
 \--BoxCollider2D Offset: (0.0, -0.2)
 \--BoxCollider2D Bounds-Min: (25.1, 27.2, 0.0)
 \--BoxCollider2D Bounds-Max: (26.1, 29.6, 0.0)
 \--BoxCollider2D isTrigger: True
 \--Component: NonBouncer
 \--Component: PlayMakerUnity2DProxy
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Attack Detect
Attack Detect
 \--Component: Transform
 \--GameObject activeSelf: True
 \--GameObject layer: 11
 \--GameObject tag: Untagged
 \--Transform Position: (25.6, 28.6, 0.0)
 \--Transform Rotation: (0.0, 0.0, 0.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
 \--Component: PlayMakerFSM
 \--PFSM Name: Detect
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Detect
 \----PFSM ---- Transitions for state: Transition on NAIL HIT to state Send
 \----PFSM ---- Actions for state: Actions on Detect ::: GetParent
 \----PFSM ---- Actions for state: Actions on Detect ::: SetParent
 \----PFSM ---- Actions for state: Actions on Detect ::: Trigger2dEvent
 \----PFSM ---- SetParent(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- SetParent(, GameObject value) = 
 \----PFSM ---- SetParent(, GameObject value name) = 
 \----PFSM ---- SetParent(String, GameObject name) = 
 \----PFSM ---- SetParent(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
 \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
 \----PFSM StateName: Send
 \----PFSM ---- Actions for state: Actions on Send ::: SendEventByName
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = Parent
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = GameObject
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = ATTACKED
 \--PFSM Active: True
 \--PFSM ActiveStateName: Detect
 \--Component: BoxCollider2D
 \--BoxCollider2D Size: (1.0, 2.4)
 \--BoxCollider2D Offset: (0.0, -0.2)
 \--BoxCollider2D Bounds-Min: (25.1, 27.2, 0.0)
 \--BoxCollider2D Bounds-Max: (26.1, 29.6, 0.0)
 \--BoxCollider2D isTrigger: True
 \--Component: NonBouncer
 \--Component: PlayMakerUnity2DProxy
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Needle Tink
Needle Tink
 \--Component: Transform
 \--GameObject activeSelf: True
 \--GameObject layer: 17
 \--GameObject tag: Untagged
 \--Transform Position: (19.9, 28.6, 0.0)
 \--Transform Rotation: (0.0, 0.0, 180.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
 \--Component: PlayMakerFSM
 \--PFSM Name: Setup and Follow
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Setup
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Deparent
 \----PFSM ---- Actions for state: Actions on Setup ::: GetOwner
 \----PFSM ---- Actions for state: Actions on Setup ::: GetParent
 \----PFSM ---- Actions for state: Actions on Setup ::: GetParent
 \----PFSM ---- Actions for state: Actions on Setup ::: SetParent
 \----PFSM ---- Actions for state: Actions on Setup ::: SetFsmGameObject
 \----PFSM ---- Actions for state: Actions on Setup ::: GetFsmGameObject
 \----PFSM ---- SetParent(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- SetParent(, GameObject value) = 
 \----PFSM ---- SetParent(, GameObject value name) = 
 \----PFSM ---- SetParent(String, GameObject name) = 
 \----PFSM ---- SetParent(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
 \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
 \----PFSM ---- SetFsmGameObject (Name) = 
 \----PFSM ---- SetFsmGameObject (fsmName) = Control
 \----PFSM ---- SetFsmGameObject (gameObject?.GameObject?.Name) = Hornet
 \----PFSM ---- SetFsmGameObject (setValue?.Name) = Self
 \----PFSM ---- SetFsmGameObject (variableName) = Needle Tink
 \----PFSM StateName: Deparent
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Follow
 \----PFSM ---- Actions for state: Actions on Deparent ::: ActivateGameObject
 \----PFSM ---- Actions for state: Actions on Deparent ::: SetParent
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Needle
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = False
 \----PFSM ---- SetParent(FsmGameObject, Needle) = Needle      :: IsNone? = False
 \----PFSM ---- SetParent(GameObject, GameObject value) = Needle (UnityEngine.GameObject)
 \----PFSM ---- SetParent(String, GameObject value name) = Needle
 \----PFSM ---- SetParent(String, GameObject name) = Needle
 \----PFSM ---- SetParent(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
 \----PFSM ---- SetParent(FsmBool, ) = False      :: IsNone? = False
 \----PFSM StateName: Follow
 \----PFSM ---- Actions for state: Actions on Follow ::: GetPosition
 \----PFSM ---- Actions for state: Actions on Follow ::: GetRotation
 \----PFSM ---- Actions for state: Actions on Follow ::: SetPosition
 \----PFSM ---- Actions for state: Actions on Follow ::: SetRotation
 \----PFSM ---- GetPosition (Name) = 
 \----PFSM ---- GetPosition (GameObject) = Needle
 \----PFSM ---- GetPosition (GameObject Name) = Needle
 \----PFSM ---- GetPosition (OwnerOption) = SpecifyGameObject
 \----PFSM ---- GetPosition (vector) = (19.9, 28.6, 0.0)
 \----PFSM ---- GetPosition (vector Name) = Pos
 \----PFSM ---- GetPosition (everyFrame) = True
 \----PFSM ---- GetPosition (space) = World
 \----PFSM ---- GetPosition(FsmFloat, ) = 19.9      :: IsNone? = True
 \----PFSM ---- GetPosition(FsmFloat, ) = 28.59476      :: IsNone? = True
 \----PFSM ---- GetPosition(FsmFloat, ) = 0.006      :: IsNone? = True
 \----PFSM ---- GetPosition(FsmVector3, Pos) = (19.9, 28.6, 0.0)      :: IsNone? = False
 \----PFSM ---- GetRotation(FsmGameObject, Needle) = Needle      :: IsNone? = False
 \----PFSM ---- GetRotation(GameObject, GameObject value) = Needle (UnityEngine.GameObject)
 \----PFSM ---- GetRotation(String, GameObject value name) = Needle
 \----PFSM ---- GetRotation(String, GameObject name) = Needle
 \----PFSM ---- GetRotation(FsmQuaternion, ) = (0.0, 0.0, 180.0)      :: IsNone? = True
 \----PFSM ---- GetRotation(Space, space) = World
 \----PFSM ---- GetRotation(FsmVector3, Rotation) = (0.0, 0.0, 180.0)      :: IsNone? = False
 \----PFSM ---- GetRotation(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- GetRotation(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- GetRotation(FsmFloat, ) = 180      :: IsNone? = True
 \----PFSM ---- GetRotation(Boolean, everyFrame) = True
 \----PFSM ---- SetPosition (Name) = 
 \----PFSM ---- SetPosition (GameObject) = None
 \----PFSM ---- SetPosition (GameObject Name) = 
 \----PFSM ---- SetPosition (OwnerOption) = UseOwner
 \----PFSM ---- SetPosition (vector) = (19.9, 28.6, 0.0)
 \----PFSM ---- SetPosition (vector Name) = Pos
 \----PFSM ---- SetPosition (everyFrame) = True
 \----PFSM ---- SetPosition (space) = World
 \----PFSM ---- SetPosition (lateUpdate) = False
 \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- SetPosition(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- SetPosition(FsmVector3, Pos) = (19.9, 28.6, 0.0)      :: IsNone? = False
 \----PFSM ---- SetRotation (Name) = 
 \----PFSM ---- SetRotation (GameObject) = None
 \----PFSM ---- SetRotation (GameObject Name) = 
 \----PFSM ---- SetRotation (OwnerOption) = UseOwner
 \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 180.0)
 \----PFSM ---- SetRotation (vector name) = Rotation
 \----PFSM ---- SetRotation (everyFrame) = True
 \----PFSM ---- SetRotation (lateUpdate) = False
 \----PFSM ---- SetRotation (space) = World
 \----PFSM ---- SetRotation (xAngle) = 0
 \----PFSM ---- SetRotation (yAngle) = 0
 \----PFSM ---- SetRotation (zAngle) = 0
 \----PFSM ---- SetRotation (xAngle name) = 
 \----PFSM ---- SetRotation (yAngle name) = 
 \----PFSM ---- SetRotation (zAngle name) = 
 \--PFSM Active: True
 \--PFSM ActiveStateName: Follow
 \--Component: BoxCollider2D
 \--BoxCollider2D Size: (3.2, 0.3)
 \--BoxCollider2D Offset: (0.0, -0.3)
 \--BoxCollider2D Bounds-Min: (19.9, 28.6, 0.0)
 \--BoxCollider2D Bounds-Max: (19.9, 28.6, 0.0)
 \--BoxCollider2D isTrigger: True
 \--Component: AudioSource
 \--Component: DeactivateIfPlayerdataTrue
 \--Component: TinkEffect
 \--Component: NeedleTink
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Needle
Needle
 \--Component: Transform
 \--GameObject activeSelf: False
 \--GameObject layer: 22
 \--GameObject tag: Untagged
 \--Transform Position: (19.9, 28.6, 0.0)
 \--Transform Rotation: (0.0, 0.0, 180.0)
 \--Transform LocalScale: (1.0, 1.0, 1.0)
 \--Component: MeshFilter
 \--Component: MeshRenderer
 \--Component: tk2dSprite
 \--Component: tk2dSpriteAnimator
 \--Component: NonBouncer
 \--Component: PolygonCollider2D
 \--PolygonCollider2D points: (0.7, 0.1)
 \--PolygonCollider2D points: (0.7, -0.1)
 \--PolygonCollider2D points: (-1.8, 0.0)
 \--PolygonCollider2D Offset: (0.0, 0.0)
 \--PolygonCollider2D Bounds-Min: (19.9, 28.6, 0.0)
 \--PolygonCollider2D Bounds-Max: (19.9, 28.6, 0.0)
 \--PolygonCollider2D isTrigger: True
 \--Component: PlayMakerFSM
 \--PFSM Name: Control
 \--PFSM FsmDescription: 
 \--PFSM StateNames
 \----PFSM StateName: Out
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Decel
 \----PFSM ---- Actions for state: Actions on Out ::: Wait
 \----PFSM ---- Actions for state: Actions on Out ::: SetRotation
 \----PFSM ---- Actions for state: Actions on Out ::: FaceAngle
 \----PFSM ---- Actions for state: Actions on Out ::: FaceAngleV2
 \----PFSM ---- Wait(String, finishEvent) = FINISHED
 \----PFSM ---- Wait(Boolean, realTime) = False
 \----PFSM ---- Wait(FsmFloat, ) = 0.3      :: IsNone? = False
 \----PFSM ---- SetRotation (Name) = 
 \----PFSM ---- SetRotation (GameObject) = None
 \----PFSM ---- SetRotation (GameObject Name) = 
 \----PFSM ---- SetRotation (OwnerOption) = UseOwner
 \----PFSM ---- SetRotation (vector) = (0.0, 0.0, 0.0)
 \----PFSM ---- SetRotation (vector name) = 
 \----PFSM ---- SetRotation (everyFrame) = False
 \----PFSM ---- SetRotation (lateUpdate) = False
 \----PFSM ---- SetRotation (space) = World
 \----PFSM ---- SetRotation (xAngle) = 0
 \----PFSM ---- SetRotation (yAngle) = 0
 \----PFSM ---- SetRotation (zAngle) = 0
 \----PFSM ---- SetRotation (xAngle name) = 
 \----PFSM ---- SetRotation (yAngle name) = 
 \----PFSM ---- SetRotation (zAngle name) = 
 \----PFSM ---- FaceAngle(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- FaceAngle(, GameObject value) = 
 \----PFSM ---- FaceAngle(, GameObject value name) = 
 \----PFSM ---- FaceAngle(String, GameObject name) = 
 \----PFSM ---- FaceAngle(FsmFloat, ) = 180      :: IsNone? = False
 \----PFSM ---- FaceAngle(Boolean, everyFrame) = True
 \----PFSM ---- FaceAngleV2(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- FaceAngleV2(, GameObject value) = 
 \----PFSM ---- FaceAngleV2(, GameObject value name) = 
 \----PFSM ---- FaceAngleV2(String, GameObject name) = 
 \----PFSM ---- FaceAngleV2(FsmFloat, ) = 180      :: IsNone? = False
 \----PFSM ---- FaceAngleV2(FsmBool, ) = True      :: IsNone? = False
 \----PFSM ---- FaceAngleV2(Boolean, everyFrame) = True
 \----PFSM StateName: Decel
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Return
 \----PFSM ---- Actions for state: Actions on Decel ::: DecelerateV2
 \----PFSM ---- Actions for state: Actions on Decel ::: GetSpeed2d
 \----PFSM ---- Actions for state: Actions on Decel ::: FloatCompare
 \----PFSM ---- DecelerateV2(FsmFloat, ) = 0.8      :: IsNone? = False
 \----PFSM ---- DecelerateV2(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- FloatCompare (Name) = 
 \----PFSM ---- FloatCompare (float1) = 0
 \----PFSM ---- FloatCompare (float2) = 0
 \----PFSM ---- FloatCompare (float1 Name) = Speed
 \----PFSM ---- FloatCompare (float2 Name) = 
 \----PFSM ---- FloatCompare (greaterThan) = 
 \----PFSM ---- FloatCompare (lessThan) = FINISHED
 \----PFSM ---- FloatCompare (equal) = FINISHED
 \----PFSM ---- FloatCompare (everyFrame) = True
 \----PFSM StateName: Init
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Out
 \----PFSM ---- Actions for state: Actions on Init ::: GetParent
 \----PFSM ---- Actions for state: Actions on Init ::: FindChild
 \----PFSM ---- Actions for state: Actions on Init ::: GetPosition
 \----PFSM ---- GetPosition (Name) = 
 \----PFSM ---- GetPosition (GameObject) = None
 \----PFSM ---- GetPosition (GameObject Name) = 
 \----PFSM ---- GetPosition (OwnerOption) = UseOwner
 \----PFSM ---- GetPosition (vector) = (19.9, 28.6, 0.0)
 \----PFSM ---- GetPosition (vector Name) = Return Vector
 \----PFSM ---- GetPosition (everyFrame) = False
 \----PFSM ---- GetPosition (space) = World
 \----PFSM ---- GetPosition(FsmFloat, ) = 19.9      :: IsNone? = True
 \----PFSM ---- GetPosition(FsmFloat, ) = 28.59476      :: IsNone? = True
 \----PFSM ---- GetPosition(FsmFloat, ) = 0.006      :: IsNone? = True
 \----PFSM ---- GetPosition(FsmVector3, Return Vector) = (19.9, 28.6, 0.0)      :: IsNone? = False
 \----PFSM StateName: Return
 \----PFSM ---- Transitions for state: Transition on FINISHED to state Notify
 \----PFSM ---- Actions for state: Actions on Return ::: iTweenMoveTo
 \----PFSM ---- Actions for state: Actions on Return ::: DecelerateV2
 \----PFSM ---- Actions for state: Actions on Return ::: ActivateGameObject
 \----PFSM ---- iTweenMoveTo(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- iTweenMoveTo(, GameObject value) = 
 \----PFSM ---- iTweenMoveTo(, GameObject value name) = 
 \----PFSM ---- iTweenMoveTo(String, GameObject name) = 
 \----PFSM ---- iTweenMoveTo(FsmFloat, ) = 0      :: IsNone? = False
 \----PFSM ---- iTweenMoveTo(EaseType, easeType ) = easeInSine
 \----PFSM ---- iTweenMoveTo(FsmEvent, finishEvent ) = HutongGames.PlayMaker.FsmEvent
 \----PFSM ---- iTweenMoveTo(String, finishEvent ) = FINISHED
 \----PFSM ---- iTweenMoveTo(FsmString, ) =       :: IsNone? = True
 \----PFSM ---- iTweenMoveTo(FsmFloat, ) = 30      :: IsNone? = False
 \----PFSM ---- iTweenMoveTo(, startEvent ) = 
 \----PFSM ---- iTweenMoveTo(, startEvent name) = 
 \----PFSM ---- iTweenMoveTo(FsmBool, ) = True      :: IsNone? = False
 \----PFSM ---- iTweenMoveTo(AxisRestriction, startEvent axis) = none
 \----PFSM ---- iTweenMoveTo(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- iTweenMoveTo(FsmGameObject, ) = None      :: IsNone? = True
 \----PFSM ---- iTweenMoveTo(FsmVector3, ) = (0.0, 0.0, 0.0)      :: IsNone? = True
 \----PFSM ---- iTweenMoveTo(FsmFloat, ) = 0      :: IsNone? = True
 \----PFSM ---- iTweenMoveTo(FsmBool, ) = True      :: IsNone? = False
 \----PFSM ---- iTweenMoveTo(LoopType, loopType ) = none
 \----PFSM ---- iTweenMoveTo(FsmBool, ) = False      :: IsNone? = False
 \----PFSM ---- iTweenMoveTo(FsmBool, ) = False      :: IsNone? = False
 \----PFSM ---- iTweenMoveTo(FsmBool, ) = False      :: IsNone? = False
 \----PFSM ---- iTweenMoveTo(FsmBool, ) = False      :: IsNone? = False
 \----PFSM ---- iTweenMoveTo(FsmGameObject, ) = None      :: IsNone? = True
 \----PFSM ---- iTweenMoveTo(FsmVector3, Return Vector) = (19.9, 28.6, 0.0)      :: IsNone? = False
 \----PFSM ---- DecelerateV2(FsmFloat, ) = 0.8      :: IsNone? = False
 \----PFSM ---- DecelerateV2(FsmGameObject, ) = None      :: IsNone? = False
 \----PFSM ---- ActivateGameObject (Name) = 
 \----PFSM ---- ActivateGameObject (GameObject) = Thread
 \----PFSM ---- ActivateGameObject (OwnerOption) = SpecifyGameObject
 \----PFSM ---- ActivateGameObject (activate) = True
 \----PFSM StateName: Notify
 \----PFSM ---- Actions for state: Actions on Notify ::: SendEventByName
 \----PFSM ---- SendEventByName (Name) = 
 \----PFSM ---- SendEventByName (delay) = 0
 \----PFSM ---- SendEventByName (eventTarget?.excludeSelf) = False
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.FsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.fsmName) = 
 \----PFSM ---- SendEventByName (eventTarget?.gameObject?.GameObject?.Name) = 
 \----PFSM ---- SendEventByName (eventTarget?.sendToChildren) = False
 \----PFSM ---- SendEventByName (eventTarget?.target) = BroadcastAll
 \----PFSM ---- SendEventByName (eventTarget?.fsmComponent?.gameObject?.name ) = 
 \----PFSM ---- SendEventByName (sendEvent) = NEEDLE RETURN
 \----PFSM StateName: Destroy
 \----PFSM ---- Actions for state: Actions on Destroy ::: DestroySelf
 \--PFSM Active: False
 \--PFSM ActiveStateName: 
 \--Component: Rigidbody2D
 \--PrintRigidbody2D mass: 1
 \--PrintRigidbody2D velocity: (0.0, 0.0)
 \--PrintRigidbody2D drag: 0
 \--PrintRigidbody2D angularVelocity: 0
 \--PrintRigidbody2D angularDrag: 0.05
 \--PrintRigidbody2D gravityScale: 0
 \--PrintRigidbody2D isKinematic: False
 \--PrintRigidbody2D interpolation: None
 \--PrintRigidbody2D freezeRotation: False
 \--PrintRigidbody2D collisionDetectionMode: Continuous
 \--Component: DamageHero
 \--Component: PlayMakerFixedUpdate
 \--Component: Needle
Needle\Thread
        \--Component: Transform
        \--GameObject activeSelf: False
        \--GameObject layer: 22
        \--GameObject tag: Untagged
        \--Transform Position: (14.7, 28.6, 0.0)
        \--Transform Rotation: (0.0, 0.0, 180.0)
        \--Transform LocalScale: (1.0, 1.0, 1.0)
        \--Component: MeshFilter
        \--Component: MeshRenderer
        \--Component: tk2dSprite
        \--Component: tk2dSpriteAnimator
        \--Component: DeactivateAfter2dtkAnimation
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
START =====================================================
Printing scene hierarchy for game object: Grass Escape
Grass Escape
 \--Component: Transform
 \--GameObject activeSelf: True
 \--GameObject layer: 11
 \--GameObject tag: Untagged
 \--Transform Position: (15.8, 42.4, -0.1)
 \--Transform Rotation: (41.6, 90.0, 0.0)
 \--Transform LocalScale: (0.0, 1.0, 1.0)
 \--Component: ParticleSystem
 \--Component: ParticleSystemRenderer
 \--Component: SetParticleScale
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
END +++++++++++++++++++++++++++++++++++++++++++++++++++++++
